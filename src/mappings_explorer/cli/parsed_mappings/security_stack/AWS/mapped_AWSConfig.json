[{"metadata": {"mapping-verision": 1, "attack-version": 9, "creation-date": "06/02/2021", "last-update": "06/02/2021", "author": "", "contact": "ctid@mitre-engenuity.org", "organization": "", "platform": "AWS", "platform-version": "", "mapping-type": "scoring"}, "attack-object": {"id": "T1020", "name": "Automated Exfiltration", "value": "AWS Config", "mapping-pattern": "", "secondary-property": "", "comments": "Mappings are based on the set of AWS managed rules provided by AWS Config, which are predefined rules that AWS Config uses to test for compliance with common best practices.\nAWS Config rules can be set to one of two types, \"configuration changes\" and \"periodic\", which are evaluated upon configuration changes and at a user-defined period, respectively.", "references": ["https://docs.aws.amazon.com/config", "https://docs.aws.amazon.com/config/latest/developerguide", "https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html"], "score-category": "Protect", "score-value": "Minimal", "score-comment": "This control provides partial coverage for this technique's only sub-technique, but without specific coverage for its procedures, resulting in an overall score of Minimal.", "related-score": true, "tags": []}}, {"metadata": {"mapping-verision": 1, "attack-version": 9, "creation-date": "06/02/2021", "last-update": "06/02/2021", "author": "", "contact": "ctid@mitre-engenuity.org", "organization": "", "platform": "AWS", "platform-version": "", "mapping-type": "scoring"}, "attack-object": {"id": "T1040", "name": "Network Sniffing", "value": "AWS Config", "mapping-pattern": "", "secondary-property": "", "comments": "Mappings are based on the set of AWS managed rules provided by AWS Config, which are predefined rules that AWS Config uses to test for compliance with common best practices.\nAWS Config rules can be set to one of two types, \"configuration changes\" and \"periodic\", which are evaluated upon configuration changes and at a user-defined period, respectively.", "references": ["https://docs.aws.amazon.com/config", "https://docs.aws.amazon.com/config/latest/developerguide", "https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html"], "score-category": "Protect", "score-value": "Partial", "score-comment": "The following AWS Config managed rules can identify configuration problems that should be fixed in order to ensure SSL/TLS encryption is enabled to protect network traffic: \"acm-certificate-expiration-check\" for nearly expired certificates in AWS Certificate Manager (ACM); \"alb-http-to-https-redirection-check\" for Application Load Balancer (ALB) HTTP listeners; \"api-gw-ssl-enabled\" for API Gateway REST API stages; \"cloudfront-custom-ssl-certificate\", \"cloudfront-sni-enabled\", and \"cloudfront-viewer-policy-https\", for Amazon CloudFront distributions; \"elb-acm-certificate-required\", \"elb-custom-security-policy-ssl-check\", \"elb-predefined-security-policy-ssl-check\", and \"elb-tls-https-listeners-only\" for Elastic Load Balancing (ELB) Classic Load Balancer listeners; \"redshift-require-tls-ssl\" for Amazon Redshift cluster connections to SQL clients; \"s3-bucket-ssl-requests-only\" for requests for S3 bucket contents; and \"elasticsearch-node-to-node-encryption-check\" for Amazon ElasticSearch Service node-to-node communications.\nThe following AWS Config managed rules can identify configuration problems that should be fixed in order to ensure that private traffic is routed securely and only within VPCs rather than on the public Internet: \"api-gw-endpoint-type-check\" for Amazon API Gateway APIs, \"elasticsearch-in-vpc-only\" for Amazon ElasticSearch Service domains, and \"redshift-enhanced-vpc-routing-enabled\" for Amazon Redshift cluster traffic.\nAll of these are run on configuration changes except \"alb-http-to-https-redirection-check\" and \"elasticsearch-in-vpc-only\", which are run periodically. Coverage factor is partial for these rules, since they are specific to a subset of the available AWS services and can only mitigate behavior for adversaries who are unable to decrypt the relevant traffic and/or do not have access to traffic within the relevant VPCs, resulting in an overall score of Partial.", "related-score": false, "tags": []}}, {"metadata": {"mapping-verision": 1, "attack-version": 9, "creation-date": "06/02/2021", "last-update": "06/02/2021", "author": "", "contact": "ctid@mitre-engenuity.org", "organization": "", "platform": "AWS", "platform-version": "", "mapping-type": "scoring"}, "attack-object": {"id": "T1053", "name": "Scheduled Task/Job", "value": "AWS Config", "mapping-pattern": "", "secondary-property": "", "comments": "Mappings are based on the set of AWS managed rules provided by AWS Config, which are predefined rules that AWS Config uses to test for compliance with common best practices.\nAWS Config rules can be set to one of two types, \"configuration changes\" and \"periodic\", which are evaluated upon configuration changes and at a user-defined period, respectively.", "references": ["https://docs.aws.amazon.com/config", "https://docs.aws.amazon.com/config/latest/developerguide", "https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html"], "score-category": "Protect", "score-value": "Minimal", "score-comment": "This control provides partial coverage for one of this technique's sub-techniques, resulting in an overall score of Minimal.", "related-score": true, "tags": []}}, {"metadata": {"mapping-verision": 1, "attack-version": 9, "creation-date": "06/02/2021", "last-update": "06/02/2021", "author": "", "contact": "ctid@mitre-engenuity.org", "organization": "", "platform": "AWS", "platform-version": "", "mapping-type": "scoring"}, "attack-object": {"id": "T1068", "name": "Exploitation for Privilege Escalation", "value": "AWS Config", "mapping-pattern": "", "secondary-property": "", "comments": "Mappings are based on the set of AWS managed rules provided by AWS Config, which are predefined rules that AWS Config uses to test for compliance with common best practices.\nAWS Config rules can be set to one of two types, \"configuration changes\" and \"periodic\", which are evaluated upon configuration changes and at a user-defined period, respectively.", "references": ["https://docs.aws.amazon.com/config", "https://docs.aws.amazon.com/config/latest/developerguide", "https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html"], "score-category": "Protect", "score-value": "Partial", "score-comment": "The \"ec2-managedinstance-applications-blacklisted\" managed rule verifies that a pre-defined list of applications are not installed on specified managed instances. It can be used to identify the presence of vulnerable applications (prompting removal before they can be exploited) and/or to identify the presence of allowed packages below a minimum version (prompting updates before they can be exploited). The \"ec2-managedinstance-platform-check\" managed rule verifies that managed instances are running desired platform types, including using a desired version (as opposed to an out-of-date one). Both can reduce instances' attack surface for adversary exploitation, including for privilege escalation.\nThe \"ecs-task-definition-user-for-host-mode-check\" managed rule can identify Amazon Elastic Container Service (ECS) task definitions for containers with host networking mode and 'privileged' or 'user' container definitions, which may enable adversaries to break out of containers and gain access to the underlying host, increasing their access and privileges.\nAll of these are run on configuration changes. Coverage factor is partial for these rules, since they are specific to a subset of the available AWS services and will only protect against certain forms of identifiable exploitation, resulting in an overall score of Partial.", "related-score": false, "tags": []}}, {"metadata": {"mapping-verision": 1, "attack-version": 9, "creation-date": "06/02/2021", "last-update": "06/02/2021", "author": "", "contact": "ctid@mitre-engenuity.org", "organization": "", "platform": "AWS", "platform-version": "", "mapping-type": "scoring"}, "attack-object": {"id": "T1078", "name": "Valid Accounts", "value": "AWS Config", "mapping-pattern": "", "secondary-property": "", "comments": "Mappings are based on the set of AWS managed rules provided by AWS Config, which are predefined rules that AWS Config uses to test for compliance with common best practices.\nAWS Config rules can be set to one of two types, \"configuration changes\" and \"periodic\", which are evaluated upon configuration changes and at a user-defined period, respectively.", "references": ["https://docs.aws.amazon.com/config", "https://docs.aws.amazon.com/config/latest/developerguide", "https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html"], "score-category": "Protect", "score-value": "Minimal", "score-comment": "This control provides significant coverage for one of this technique's sub-techniques, resulting in an overall score of Minimal.", "related-score": true, "tags": []}}, {"metadata": {"mapping-verision": 1, "attack-version": 9, "creation-date": "06/02/2021", "last-update": "06/02/2021", "author": "", "contact": "ctid@mitre-engenuity.org", "organization": "", "platform": "AWS", "platform-version": "", "mapping-type": "scoring"}, "attack-object": {"id": "T1098", "name": "Account Manipulation", "value": "AWS Config", "mapping-pattern": "", "secondary-property": "", "comments": "Mappings are based on the set of AWS managed rules provided by AWS Config, which are predefined rules that AWS Config uses to test for compliance with common best practices.\nAWS Config rules can be set to one of two types, \"configuration changes\" and \"periodic\", which are evaluated upon configuration changes and at a user-defined period, respectively.", "references": ["https://docs.aws.amazon.com/config", "https://docs.aws.amazon.com/config/latest/developerguide", "https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html"], "score-category": "Protect", "score-value": "Minimal", "score-comment": "This control provides significant coverage for one of this technique's sub-techniques, resulting in an overall score of Minimal.", "related-score": true, "tags": []}}, {"metadata": {"mapping-verision": 1, "attack-version": 9, "creation-date": "06/02/2021", "last-update": "06/02/2021", "author": "", "contact": "ctid@mitre-engenuity.org", "organization": "", "platform": "AWS", "platform-version": "", "mapping-type": "scoring"}, "attack-object": {"id": "T1110", "name": "Brute Force", "value": "AWS Config", "mapping-pattern": "", "secondary-property": "", "comments": "Mappings are based on the set of AWS managed rules provided by AWS Config, which are predefined rules that AWS Config uses to test for compliance with common best practices.\nAWS Config rules can be set to one of two types, \"configuration changes\" and \"periodic\", which are evaluated upon configuration changes and at a user-defined period, respectively.", "references": ["https://docs.aws.amazon.com/config", "https://docs.aws.amazon.com/config/latest/developerguide", "https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html"], "score-category": "Protect", "score-value": "Significant", "score-comment": "This control provides significant coverage for all of this technique's sub-techniques, resulting in an overall score of Significant.", "related-score": true, "tags": []}}, {"metadata": {"mapping-verision": 1, "attack-version": 9, "creation-date": "06/02/2021", "last-update": "06/02/2021", "author": "", "contact": "ctid@mitre-engenuity.org", "organization": "", "platform": "AWS", "platform-version": "", "mapping-type": "scoring"}, "attack-object": {"id": "T1119", "name": "Automated Collection", "value": "AWS Config", "mapping-pattern": "", "secondary-property": "", "comments": "Mappings are based on the set of AWS managed rules provided by AWS Config, which are predefined rules that AWS Config uses to test for compliance with common best practices.\nAWS Config rules can be set to one of two types, \"configuration changes\" and \"periodic\", which are evaluated upon configuration changes and at a user-defined period, respectively.", "references": ["https://docs.aws.amazon.com/config", "https://docs.aws.amazon.com/config/latest/developerguide", "https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html"], "score-category": "Protect", "score-value": "Minimal", "score-comment": "The following AWS Config managed rules can identify configuration problems that should be fixed in order to ensure that storage volumes are encrypted, which may mitigate adversary attempts to automate collection within cloud environments: \"ec2-ebs-encryption-by-default\" which is run periodically and \"encrypted-volumes\" which is run on configuration changes.\nCoverage factor is minimal for these rules, since they are specific to EBS volumes and will only prevent certain forms of collection since adversaries with access to mounted volumes may be able to decrypt their contents, resulting in an overall score of Minimal.", "related-score": false, "tags": []}}, {"metadata": {"mapping-verision": 1, "attack-version": 9, "creation-date": "06/02/2021", "last-update": "06/02/2021", "author": "", "contact": "ctid@mitre-engenuity.org", "organization": "", "platform": "AWS", "platform-version": "", "mapping-type": "scoring"}, "attack-object": {"id": "T1136", "name": "Create Account", "value": "AWS Config", "mapping-pattern": "", "secondary-property": "", "comments": "Mappings are based on the set of AWS managed rules provided by AWS Config, which are predefined rules that AWS Config uses to test for compliance with common best practices.\nAWS Config rules can be set to one of two types, \"configuration changes\" and \"periodic\", which are evaluated upon configuration changes and at a user-defined period, respectively.", "references": ["https://docs.aws.amazon.com/config", "https://docs.aws.amazon.com/config/latest/developerguide", "https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html"], "score-category": "Protect", "score-value": "Minimal", "score-comment": "This control provides partial coverage for one of this technique's sub-techniques, resulting in an overall score of Minimal.", "related-score": true, "tags": []}}, {"metadata": {"mapping-verision": 1, "attack-version": 9, "creation-date": "06/02/2021", "last-update": "06/02/2021", "author": "", "contact": "ctid@mitre-engenuity.org", "organization": "", "platform": "AWS", "platform-version": "", "mapping-type": "scoring"}, "attack-object": {"id": "T1190", "name": "Exploit Public-Facing Application", "value": "AWS Config", "mapping-pattern": "", "secondary-property": "", "comments": "Mappings are based on the set of AWS managed rules provided by AWS Config, which are predefined rules that AWS Config uses to test for compliance with common best practices.\nAWS Config rules can be set to one of two types, \"configuration changes\" and \"periodic\", which are evaluated upon configuration changes and at a user-defined period, respectively.", "references": ["https://docs.aws.amazon.com/config", "https://docs.aws.amazon.com/config/latest/developerguide", "https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html"], "score-category": "Protect", "score-value": "Partial", "score-comment": "The following AWS Config managed rules can identify configuration problems that should be fixed in order to ensure that applications intended for internal use cannot be accessed externally for exploitation: \"api-gw-endpoint-type-check\" can ensure that Amazon API Gateway APIs are private and can only be accessed from within VPCs, \"elasticsearch-in-vpc-only\" can ensure that Amazon ElasticSearch Service (Amazon ES) domains are in the same VPC and the domain endpoint is not public, \"lambda-function-public-access-prohibited\" can verify that AWS Lambda functions are not publicly available, and \"ec2-instance-no-public-ip\" can verify whether EC2 instances have public IP addresses.\nThe following AWS Config managed rules can identify configuration problems that should be fixed in order to ensure that insecure applications are not installed and installed packages are kept updated, reducing the likelihood of adversary exploitation: the \"ec2-managedinstance-applications-blacklisted\" managed rule verifies that a pre-defined list of applications are not installed on specified managed instances. It can be used to identify the presence of vulnerable applications (prompting removal before they can be exploited) and/or to identify the presence of allowed packages below a minimum version (prompting updates before they can be exploited). The \"ec2-managedinstance-platform-check\" managed rule verifies that managed instances are running desired platform types, including using a desired version (as opposed to an out-of-date one). Both can reduce instances' attack surface for adversary exploitation. \"rds-automatic-minor-version-upgrade-enabled\" can verify that Amazon RDS is being patched, and \"elastic-beanstalk-managed-updates-enabled\" can verify that Elastic Beanstalk is being patched.\nCoverage factor is partial for these rules, since they are specific to a subset of the available AWS services that can be used to host public-facing applications and will only protect against certain forms of identifiable exploitation, resulting in an overall score of Partial.", "related-score": false, "tags": []}}, {"metadata": {"mapping-verision": 1, "attack-version": 9, "creation-date": "06/02/2021", "last-update": "06/02/2021", "author": "", "contact": "ctid@mitre-engenuity.org", "organization": "", "platform": "AWS", "platform-version": "", "mapping-type": "scoring"}, "attack-object": {"id": "T1203", "name": "Exploitation for Client Execution", "value": "AWS Config", "mapping-pattern": "", "secondary-property": "", "comments": "Mappings are based on the set of AWS managed rules provided by AWS Config, which are predefined rules that AWS Config uses to test for compliance with common best practices.\nAWS Config rules can be set to one of two types, \"configuration changes\" and \"periodic\", which are evaluated upon configuration changes and at a user-defined period, respectively.", "references": ["https://docs.aws.amazon.com/config", "https://docs.aws.amazon.com/config/latest/developerguide", "https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html"], "score-category": "Protect", "score-value": "Partial", "score-comment": "The \"ec2-managedinstance-applications-blacklisted\" managed rule verifies that a pre-defined list of applications are not installed on specified managed instances. It can be used to identify the presence of vulnerable applications (prompting removal before they can be exploited) and/or to identify the presence of allowed packages below a minimum version (prompting updates before they can be exploited). The \"ec2-managedinstance-platform-check\" managed rule verifies that managed instances are running desired platform types, including using a desired version (as opposed to an out-of-date one). Both can reduce instances' attack surface for adversary exploitation, including for client execution.\nAll of these are run on configuration changes. Coverage factor is partial for these rules, since they are specific to a subset of the available AWS services and will only protect against certain forms of identifiable exploitation, resulting in an overall score of Partial.", "related-score": false, "tags": []}}, {"metadata": {"mapping-verision": 1, "attack-version": 9, "creation-date": "06/02/2021", "last-update": "06/02/2021", "author": "", "contact": "ctid@mitre-engenuity.org", "organization": "", "platform": "AWS", "platform-version": "", "mapping-type": "scoring"}, "attack-object": {"id": "T1210", "name": "Exploitation of Remote Services", "value": "AWS Config", "mapping-pattern": "", "secondary-property": "", "comments": "Mappings are based on the set of AWS managed rules provided by AWS Config, which are predefined rules that AWS Config uses to test for compliance with common best practices.\nAWS Config rules can be set to one of two types, \"configuration changes\" and \"periodic\", which are evaluated upon configuration changes and at a user-defined period, respectively.", "references": ["https://docs.aws.amazon.com/config", "https://docs.aws.amazon.com/config/latest/developerguide", "https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html"], "score-category": "Protect", "score-value": "Partial", "score-comment": "The \"ec2-managedinstance-applications-blacklisted\" managed rule verifies that a pre-defined list of applications are not installed on specified managed instances. It can be used to identify the presence of vulnerable applications (prompting removal before they can be exploited) and/or to identify the presence of allowed packages below a minimum version (prompting updates before they can be exploited), both of which can reduce instances' attack surface for adversary exploitation, including via those applications' exposed remote services. The \"ec2-instance-no-public-ip\" managed rule identifies EC2 instances with public IP associations, which should be removed unless necessary to avoid exposing services publicly for adversary access.\nAll of these are run on configuration changes. Coverage factor is partial for these rules, since they are specific to a subset of the available AWS services and will only protect against certain forms of identifiable exploitation, resulting in an overall score of Partial.", "related-score": false, "tags": []}}, {"metadata": {"mapping-verision": 1, "attack-version": 9, "creation-date": "06/02/2021", "last-update": "06/02/2021", "author": "", "contact": "ctid@mitre-engenuity.org", "organization": "", "platform": "AWS", "platform-version": "", "mapping-type": "scoring"}, "attack-object": {"id": "T1211", "name": "Exploitation for Defense Evasion", "value": "AWS Config", "mapping-pattern": "", "secondary-property": "", "comments": "Mappings are based on the set of AWS managed rules provided by AWS Config, which are predefined rules that AWS Config uses to test for compliance with common best practices.\nAWS Config rules can be set to one of two types, \"configuration changes\" and \"periodic\", which are evaluated upon configuration changes and at a user-defined period, respectively.", "references": ["https://docs.aws.amazon.com/config", "https://docs.aws.amazon.com/config/latest/developerguide", "https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html"], "score-category": "Protect", "score-value": "Partial", "score-comment": "The \"ec2-managedinstance-applications-blacklisted\" managed rule verifies that a pre-defined list of applications are not installed on specified managed instances. It can be used to identify the presence of vulnerable applications (prompting removal before they can be exploited) and/or to identify the presence of allowed packages below a minimum version (prompting updates before they can be exploited). The \"ec2-managedinstance-platform-check\" managed rule verifies that managed instances are running desired platform types, including using a desired version (as opposed to an out-of-date one). Both can reduce instances' attack surface for adversary exploitation, including for defense evasion.\nAll of these are run on configuration changes. Coverage factor is partial for these rules, since they are specific to a subset of the available AWS services and will only protect against certain forms of identifiable exploitation, resulting in an overall score of Partial.", "related-score": false, "tags": []}}, {"metadata": {"mapping-verision": 1, "attack-version": 9, "creation-date": "06/02/2021", "last-update": "06/02/2021", "author": "", "contact": "ctid@mitre-engenuity.org", "organization": "", "platform": "AWS", "platform-version": "", "mapping-type": "scoring"}, "attack-object": {"id": "T1212", "name": "Exploitation for Credential Access", "value": "AWS Config", "mapping-pattern": "", "secondary-property": "", "comments": "Mappings are based on the set of AWS managed rules provided by AWS Config, which are predefined rules that AWS Config uses to test for compliance with common best practices.\nAWS Config rules can be set to one of two types, \"configuration changes\" and \"periodic\", which are evaluated upon configuration changes and at a user-defined period, respectively.", "references": ["https://docs.aws.amazon.com/config", "https://docs.aws.amazon.com/config/latest/developerguide", "https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html"], "score-category": "Protect", "score-value": "Partial", "score-comment": "The \"ec2-managedinstance-applications-blacklisted\" managed rule verifies that a pre-defined list of applications are not installed on specified managed instances. It can be used to identify the presence of vulnerable applications (prompting removal before they can be exploited) and/or to identify the presence of allowed packages below a minimum version (prompting updates before they can be exploited). The \"ec2-managedinstance-platform-check\" managed rule verifies that managed instances are running desired platform types, including using a desired version (as opposed to an out-of-date one).Both can reduce instances' attack surface for adversary exploitation, including for credential access.\nAll of these are run on configuration changes. Coverage factor is partial for these rules, since they are specific to a subset of the available AWS services and will only protect against certain forms of identifiable exploitation, resulting in an overall score of Partial.", "related-score": false, "tags": []}}, {"metadata": {"mapping-verision": 1, "attack-version": 9, "creation-date": "06/02/2021", "last-update": "06/02/2021", "author": "", "contact": "ctid@mitre-engenuity.org", "organization": "", "platform": "AWS", "platform-version": "", "mapping-type": "scoring"}, "attack-object": {"id": "T1204", "name": "User Execution", "value": "AWS Config", "mapping-pattern": "", "secondary-property": "", "comments": "Mappings are based on the set of AWS managed rules provided by AWS Config, which are predefined rules that AWS Config uses to test for compliance with common best practices.\nAWS Config rules can be set to one of two types, \"configuration changes\" and \"periodic\", which are evaluated upon configuration changes and at a user-defined period, respectively.", "references": ["https://docs.aws.amazon.com/config", "https://docs.aws.amazon.com/config/latest/developerguide", "https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html"], "score-category": "Detect", "score-value": "Minimal", "score-comment": "This control provides significant coverage for one of this technique's sub-techniques, resulting in an overall score of Minimal.", "related-score": true, "tags": []}}, {"metadata": {"mapping-verision": 1, "attack-version": 9, "creation-date": "06/02/2021", "last-update": "06/02/2021", "author": "", "contact": "ctid@mitre-engenuity.org", "organization": "", "platform": "AWS", "platform-version": "", "mapping-type": "scoring"}, "attack-object": {"id": "T1485", "name": "Data Destruction", "value": "AWS Config", "mapping-pattern": "", "secondary-property": "", "comments": "Mappings are based on the set of AWS managed rules provided by AWS Config, which are predefined rules that AWS Config uses to test for compliance with common best practices.\nAWS Config rules can be set to one of two types, \"configuration changes\" and \"periodic\", which are evaluated upon configuration changes and at a user-defined period, respectively.", "references": ["https://docs.aws.amazon.com/config", "https://docs.aws.amazon.com/config/latest/developerguide", "https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html"], "score-category": "Protect", "score-value": "Partial", "score-comment": "The following AWS Config managed rules can identify configuration problems that should be fixed in order to prevent malicious write access to data within Amazon Simple Storage Service (S3) storage, which may include data destruction: \"s3-bucket-blacklisted-actions-prohibited\" checks whether bucket policies prohibit disallowed actions (including S3:DeleteObject) for principals from other AWS accounts, \"s3-bucket-default-lock-enabled\" checks whether a bucket that should be locked in write-once-read-many (WORM) mode is configured to prevent modification, and \"s3-bucket-public-write-prohibited\" checks whether a bucket is configured to allow public access and modification. All of these controls are run on configuration changes.\nThe following AWS Config managed rules can identify configuration problems that should be fixed in order to ensure backups and redundancy are in place which can mitigate the effects of data destruction: \"aurora-mysql-backtracking-enabled\" for data in Aurora MySQL; \"db-instance-backup-enabled\" and \"rds-in-backup-plan\" for Amazon Relational Database Service (RDS) data; \"dynamodb-in-backup-plan\" and \"dynamodb-pitr-enabled\" for Amazon DynamoDB table contents; \"ebs-in-backup-plan\" for Elastic Block Store (EBS) volumes; \"efs-in-backup-plan\" for Amazon Elastic File System (EFS) file systems; \"elasticache-redis-cluster-automatic-backup-check\" for Amazon ElastiCache Redis cluster data; \"redshift-backup-enabled\" and \"redshift-cluster-maintenancesettings-check\" for Redshift; \"s3-bucket-replication-enabled\" and \"s3-bucket-versioning-enabled\" for S3 storage; and \"cloudfront-origin-failover-enabled\" for CloudFront.\nThe following AWS Config managed rules provide specific detections for configuration problems that should be fixed in order to prevent malicious deletion of specific data: \"elb-deletion-protection-enabled\" for Elastic Block Store (EBS) volumes, and \"rds-cluster-deletion-protection-enabled\" and \"rds-instance-deletion-protection-enabled\" for RDS data.\nCoverage factor is partial for these rules, since they are specific to a subset of the available AWS services and will only protect certain types of data against destruction, resulting in an overall score of Partial.", "related-score": false, "tags": []}}, {"metadata": {"mapping-verision": 1, "attack-version": 9, "creation-date": "06/02/2021", "last-update": "06/02/2021", "author": "", "contact": "ctid@mitre-engenuity.org", "organization": "", "platform": "AWS", "platform-version": "", "mapping-type": "scoring"}, "attack-object": {"id": "T1486", "name": "Data Encrypted for Impact", "value": "AWS Config", "mapping-pattern": "", "secondary-property": "", "comments": "Mappings are based on the set of AWS managed rules provided by AWS Config, which are predefined rules that AWS Config uses to test for compliance with common best practices.\nAWS Config rules can be set to one of two types, \"configuration changes\" and \"periodic\", which are evaluated upon configuration changes and at a user-defined period, respectively.", "references": ["https://docs.aws.amazon.com/config", "https://docs.aws.amazon.com/config/latest/developerguide", "https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html"], "score-category": "Protect", "score-value": "Partial", "score-comment": "The following AWS Config managed rules can identify configuration problems that should be fixed in order to prevent malicious changes to data encryption within Amazon Simple Storage Service (S3) storage: \"s3-bucket-blacklisted-actions-prohibited\" checks whether bucket policies prohibit disallowed actions (including encryption configuration changes) for principals from other AWS accounts, \"s3-bucket-default-lock-enabled\" checks whether a bucket that should be locked in write-once-read-many (WORM) mode is configured to prevent modification, and \"s3-bucket-public-write-prohibited\" checks whether a bucket is configured to allow public access and modification. All of these controls are run on configuration changes.\nThe following AWS Config managed rules can identify configuration problems that should be fixed in order to ensure backups and redundancy are in place which can mitigate the effects of malicious changes to data encryption: \"aurora-mysql-backtracking-enabled\" for data in Aurora MySQL; \"db-instance-backup-enabled\" and \"rds-in-backup-plan\" for Amazon Relational Database Service (RDS) data; \"dynamodb-in-backup-plan\" and \"dynamodb-pitr-enabled\" for Amazon DynamoDB table contents; \"ebs-in-backup-plan\" for Elastic Block Store (EBS) volumes; \"efs-in-backup-plan\" for Amazon Elastic File System (EFS) file systems; \"elasticache-redis-cluster-automatic-backup-check\" for Amazon ElastiCache Redis cluster data; \"redshift-backup-enabled\" and \"redshift-cluster-maintenancesettings-check\" for Redshift; \"s3-bucket-replication-enabled\" and \"s3-bucket-versioning-enabled\" for S3 storage; and \"cloudfront-origin-failover-enabled\" for CloudFront.\nCoverage factor is partial for these rules, since they are specific to a subset of the available AWS services and will only protect certain types of data against malicious encryption changes, resulting in an overall score of Partial.", "related-score": false, "tags": []}}, {"metadata": {"mapping-verision": 1, "attack-version": 9, "creation-date": "06/02/2021", "last-update": "06/02/2021", "author": "", "contact": "ctid@mitre-engenuity.org", "organization": "", "platform": "AWS", "platform-version": "", "mapping-type": "scoring"}, "attack-object": {"id": "T1491", "name": "Defacement", "value": "AWS Config", "mapping-pattern": "", "secondary-property": "", "comments": "Mappings are based on the set of AWS managed rules provided by AWS Config, which are predefined rules that AWS Config uses to test for compliance with common best practices.\nAWS Config rules can be set to one of two types, \"configuration changes\" and \"periodic\", which are evaluated upon configuration changes and at a user-defined period, respectively.", "references": ["https://docs.aws.amazon.com/config", "https://docs.aws.amazon.com/config/latest/developerguide", "https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html"], "score-category": "Protect", "score-value": "Significant", "score-comment": "This control provides significant coverage for all of this technique's sub-techniques, resulting in an overall score of Significant.", "related-score": true, "tags": []}}, {"metadata": {"mapping-verision": 1, "attack-version": 9, "creation-date": "06/02/2021", "last-update": "06/02/2021", "author": "", "contact": "ctid@mitre-engenuity.org", "organization": "", "platform": "AWS", "platform-version": "", "mapping-type": "scoring"}, "attack-object": {"id": "T1496", "name": "Resource Hijacking", "value": "AWS Config", "mapping-pattern": "", "secondary-property": "", "comments": "Mappings are based on the set of AWS managed rules provided by AWS Config, which are predefined rules that AWS Config uses to test for compliance with common best practices.\nAWS Config rules can be set to one of two types, \"configuration changes\" and \"periodic\", which are evaluated upon configuration changes and at a user-defined period, respectively.", "references": ["https://docs.aws.amazon.com/config", "https://docs.aws.amazon.com/config/latest/developerguide", "https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html"], "score-category": "Detect", "score-value": "Partial", "score-comment": "The following AWS Config managed rules can identify configuration problems that should be fixed in order to ensure alarms exist for spikes in resource utilization, which help to identify malicious use of resources within a cloud environment: \"cloudwatch-alarm-action-check\", \"cloudwatch-alarm-resource-check\", \"cloudwatch-alarm-settings-check\", \"desired-instance-tenancy\", \"desired-instance-type\", \"dynamodb-autoscaling-enabled\", \"dynamodb-throughput-limit-check\", \"ec2-instance-detailed-monitoring-enabled\", and \"rds-enhanced-monitoring-enabled\".\nCoverage factor is partial for these rules, since they are specific to a subset of the available AWS services and will only detect resource hijacking that results in a change in utilization that is significant enough to trigger alarms, resulting in an overall score of Partial.", "related-score": false, "tags": []}}, {"metadata": {"mapping-verision": 1, "attack-version": 9, "creation-date": "06/02/2021", "last-update": "06/02/2021", "author": "", "contact": "ctid@mitre-engenuity.org", "organization": "", "platform": "AWS", "platform-version": "", "mapping-type": "scoring"}, "attack-object": {"id": "T1498", "name": "Network Denial of Service", "value": "AWS Config", "mapping-pattern": "", "secondary-property": "", "comments": "Mappings are based on the set of AWS managed rules provided by AWS Config, which are predefined rules that AWS Config uses to test for compliance with common best practices.\nAWS Config rules can be set to one of two types, \"configuration changes\" and \"periodic\", which are evaluated upon configuration changes and at a user-defined period, respectively.", "references": ["https://docs.aws.amazon.com/config", "https://docs.aws.amazon.com/config/latest/developerguide", "https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html"], "score-category": "Protect", "score-value": "Minimal", "score-comment": "This control provides minimal coverage for this technique's sub-techniques as well as its procedures, resulting in an overall score of Minimal.", "related-score": true, "tags": []}}, {"metadata": {"mapping-verision": 1, "attack-version": 9, "creation-date": "06/02/2021", "last-update": "06/02/2021", "author": "", "contact": "ctid@mitre-engenuity.org", "organization": "", "platform": "AWS", "platform-version": "", "mapping-type": "scoring"}, "attack-object": {"id": "T1499", "name": "Endpoint Denial of Service", "value": "AWS Config", "mapping-pattern": "", "secondary-property": "", "comments": "Mappings are based on the set of AWS managed rules provided by AWS Config, which are predefined rules that AWS Config uses to test for compliance with common best practices.\nAWS Config rules can be set to one of two types, \"configuration changes\" and \"periodic\", which are evaluated upon configuration changes and at a user-defined period, respectively.", "references": ["https://docs.aws.amazon.com/config", "https://docs.aws.amazon.com/config/latest/developerguide", "https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html"], "score-category": "Protect", "score-value": "Minimal", "score-comment": "This control provides minimal coverage for this technique's sub-techniques as well as its procedures, resulting in an overall score of Minimal.", "related-score": true, "tags": []}}, {"metadata": {"mapping-verision": 1, "attack-version": 9, "creation-date": "06/02/2021", "last-update": "06/02/2021", "author": "", "contact": "ctid@mitre-engenuity.org", "organization": "", "platform": "AWS", "platform-version": "", "mapping-type": "scoring"}, "attack-object": {"id": "T1525", "name": "Implant Internal Image", "value": "AWS Config", "mapping-pattern": "", "secondary-property": "", "comments": "Mappings are based on the set of AWS managed rules provided by AWS Config, which are predefined rules that AWS Config uses to test for compliance with common best practices.\nAWS Config rules can be set to one of two types, \"configuration changes\" and \"periodic\", which are evaluated upon configuration changes and at a user-defined period, respectively.", "references": ["https://docs.aws.amazon.com/config", "https://docs.aws.amazon.com/config/latest/developerguide", "https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html"], "score-category": "Detect", "score-value": "Minimal", "score-comment": "The following AWS Config managed rules can identify running instances that are not using AMIs within a specified allow list: \"approved-amis-by-id\" and \"approved-amis-by-tag\", both of which are run on configuration changes. This does not provide detection of the image implanting itself, but does provide detection for any subsequent use of images that are implanted and not present within the allow list, resulting in a score of Minimal.", "related-score": false, "tags": []}}, {"metadata": {"mapping-verision": 1, "attack-version": 9, "creation-date": "06/02/2021", "last-update": "06/02/2021", "author": "", "contact": "ctid@mitre-engenuity.org", "organization": "", "platform": "AWS", "platform-version": "", "mapping-type": "scoring"}, "attack-object": {"id": "T1530", "name": "Data from Cloud Storage Object", "value": "AWS Config", "mapping-pattern": "", "secondary-property": "", "comments": "Mappings are based on the set of AWS managed rules provided by AWS Config, which are predefined rules that AWS Config uses to test for compliance with common best practices.\nAWS Config rules can be set to one of two types, \"configuration changes\" and \"periodic\", which are evaluated upon configuration changes and at a user-defined period, respectively.", "references": ["https://docs.aws.amazon.com/config", "https://docs.aws.amazon.com/config/latest/developerguide", "https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html"], "score-category": "Protect", "score-value": "Significant", "score-comment": "The following AWS Config managed rules can identify configuration problems that should be fixed in order to prevent malicious access of data within Amazon Simple Storage Service (S3) storage: \"s3-account-level-public-access-blocks\", \"s3-bucket-level-public-access-prohibited\", \"s3-bucket-public-read-prohibited\", \"s3-bucket-policy-not-more-permissive\", \"cloudfront-origin-access-identity-enabled\", and \"cloudfront-default-root-object-configured\" identify objects that are publicly available or subject to overly permissive access policies; \"s3-bucket-blacklisted-actions-prohibited\" checks whether bucket policies prohibit disallowed actions for principals from other AWS accounts; and \"s3-bucket-policy-grantee-check\" checks whether bucket policies appropriately control which AWS principals, federated users, service principals, IP addresses, and VPCs have access. All of these controls are run on configuration changes.\nThe following AWS Config managed rules can identify configuration problems that should be fixed in order to prevent malicious access of data from other AWS services: \"dms-replication-not-public\" for AWS Database Migration Service; \"emr-master-no-public-ip\" for Amazon Elastic MapReduce (EMR); \"rds-cluster-iam-authentication-enabled\", \"rds-instance-iam-authentication-enabled\", \"rds-instance-public-access-check\" and \"rds-snapshots-public-prohibited\" for Amazon Relational Database Service; \"redshift-cluster-public-access-check\" for Amazon Redshift; and \"sagemaker-notebook-no-direct-internet-access\" for SageMaker.\nThe following AWS Config managed rules can identify configuration problems that should be fixed in order to ensure that cloud storage data are encrypted to prevent malicious access: \"dax-encryption-enabled\", \"dynamodb-table-encrypted-kms\", and \"dynamodb-table-encryption-enabled\" for Amazon DynamoDB table contents; \"efs-encrypted-check\" for Amazon Elastic File System (EFS) file systems; \"elasticsearch-encrypted-at-rest\" for Elasticsearch Service (ES) domains; \"rds-snapshot-encrypted\" and \"rds-storage-encrypted\" for Amazon Relational Database Service; \"s3-bucket-server-side-encryption-enabled\" and \"s3-default-encryption-kms\" for S3 storage; \"sns-encrypted-kms\" for Amazon Simple Notification Service (SNS); \"redshift-cluster-configuration-check\" and \"redshift-cluster-kms-enabled\" for Redshift clusters; \"sagemaker-endpoint-configuration-kms-key-configured\" and \"sagemaker-notebook-instance-kms-key-configured\" for SageMaker.\nThese rules provide a wide range of coverage for many AWS services, especially those most significant to procedures for this technique, resulting in an overall score of Significant.", "related-score": false, "tags": []}}, {"metadata": {"mapping-verision": 1, "attack-version": 9, "creation-date": "06/02/2021", "last-update": "06/02/2021", "author": "", "contact": "ctid@mitre-engenuity.org", "organization": "", "platform": "AWS", "platform-version": "", "mapping-type": "scoring"}, "attack-object": {"id": "T1538", "name": "Cloud Service Dashboard", "value": "AWS Config", "mapping-pattern": "", "secondary-property": "", "comments": "Mappings are based on the set of AWS managed rules provided by AWS Config, which are predefined rules that AWS Config uses to test for compliance with common best practices.\nAWS Config rules can be set to one of two types, \"configuration changes\" and \"periodic\", which are evaluated upon configuration changes and at a user-defined period, respectively.", "references": ["https://docs.aws.amazon.com/config", "https://docs.aws.amazon.com/config/latest/developerguide", "https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html"], "score-category": "Protect", "score-value": "Significant", "score-comment": "The \"mfa-enabled-for-iam-console-access\" managed rule checks whether multi-factor authentication is enabled for all AWS IAM users that use a console password, protecting against misuse of those accounts' dashboard access. It is run periodically, and provides significant coverage, resulting in an overall score of Significant.", "related-score": false, "tags": []}}, {"metadata": {"mapping-verision": 1, "attack-version": 9, "creation-date": "06/02/2021", "last-update": "06/02/2021", "author": "", "contact": "ctid@mitre-engenuity.org", "organization": "", "platform": "AWS", "platform-version": "", "mapping-type": "scoring"}, "attack-object": {"id": "T1552", "name": "Unsecured Credentials", "value": "AWS Config", "mapping-pattern": "", "secondary-property": "", "comments": "Mappings are based on the set of AWS managed rules provided by AWS Config, which are predefined rules that AWS Config uses to test for compliance with common best practices.\nAWS Config rules can be set to one of two types, \"configuration changes\" and \"periodic\", which are evaluated upon configuration changes and at a user-defined period, respectively.", "references": ["https://docs.aws.amazon.com/config", "https://docs.aws.amazon.com/config/latest/developerguide", "https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html"], "score-category": "Protect", "score-value": "Partial", "score-comment": "The following AWS Config managed rules can identify insecure plaintext credentials within specific parts of a cloud environment: \"codebuild-project-envvar-awscred-check\" for credentials (AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY) stored within environment variables, \"codebuild-project-source-repo-url-check\" for personal access tokens and/or credentials within source repository URLs.\nThe following AWS Config managed rules can identify configuration problems that should be fixed in order to ensure that the contents of secrets in AWS Secrets Manager (including credentials) are properly secured to avoid adversary access: \"secretsmanager-rotation-enabled-check\", \"secretsmanager-scheduled-rotation-success-check\", \"secretsmanager-secret-periodic-rotation\", and \"secretsmanager-using-cmk\".\nThis control provides partial coverage for a minority of this technique's sub-techniques, in addition to the parent coverage above, resulting in an overall score of Partial.", "related-score": true, "tags": []}}, {"metadata": {"mapping-verision": 1, "attack-version": 9, "creation-date": "06/02/2021", "last-update": "06/02/2021", "author": "", "contact": "ctid@mitre-engenuity.org", "organization": "", "platform": "AWS", "platform-version": "", "mapping-type": "scoring"}, "attack-object": {"id": "T1557", "name": "Man-in-the-Middle", "value": "AWS Config", "mapping-pattern": "", "secondary-property": "", "comments": "Mappings are based on the set of AWS managed rules provided by AWS Config, which are predefined rules that AWS Config uses to test for compliance with common best practices.\nAWS Config rules can be set to one of two types, \"configuration changes\" and \"periodic\", which are evaluated upon configuration changes and at a user-defined period, respectively.", "references": ["https://docs.aws.amazon.com/config", "https://docs.aws.amazon.com/config/latest/developerguide", "https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html"], "score-category": "Protect", "score-value": "Minimal", "score-comment": "The following AWS Config managed rules can identify configuration problems that should be fixed in order to ensure SSL/TLS encryption is enabled to protect network traffic: \"acm-certificate-expiration-check\" for nearly expired certificates in AWS Certificate Manager (ACM); \"alb-http-to-https-redirection-check\" for Application Load Balancer (ALB) HTTP listeners; \"api-gw-ssl-enabled\" for API Gateway REST API stages; \"cloudfront-custom-ssl-certificate\", \"cloudfront-sni-enabled\", and \"cloudfront-viewer-policy-https\", for Amazon CloudFront distributions; \"elb-acm-certificate-required\", \"elb-custom-security-policy-ssl-check\", \"elb-predefined-security-policy-ssl-check\", and \"elb-tls-https-listeners-only\" for Elastic Load Balancing (ELB) Classic Load Balancer listeners; \"redshift-require-tls-ssl\" for Amazon Redshift cluster connections to SQL clients; \"s3-bucket-ssl-requests-only\" for requests for S3 bucket contents; and \"elasticsearch-node-to-node-encryption-check\" for Amazon ElasticSearch Service node-to-node communications.\nAll of these are run on configuration changes except \"alb-http-to-https-redirection-check\", which is run periodically. Coverage factor is partial for these rules, since they are specific to a subset of the available AWS services and can only mitigate behavior for adversaries who are unable to decrypt the relevant traffic. This control does not provide specific coverage for this technique's sub-techniques, resulting in an overall score of Minimal.", "related-score": false, "tags": []}}, {"metadata": {"mapping-verision": 1, "attack-version": 9, "creation-date": "06/02/2021", "last-update": "06/02/2021", "author": "", "contact": "ctid@mitre-engenuity.org", "organization": "", "platform": "AWS", "platform-version": "", "mapping-type": "scoring"}, "attack-object": {"id": "T1562", "name": "Impair Defenses", "value": "AWS Config", "mapping-pattern": "", "secondary-property": "", "comments": "Mappings are based on the set of AWS managed rules provided by AWS Config, which are predefined rules that AWS Config uses to test for compliance with common best practices.\nAWS Config rules can be set to one of two types, \"configuration changes\" and \"periodic\", which are evaluated upon configuration changes and at a user-defined period, respectively.", "references": ["https://docs.aws.amazon.com/config", "https://docs.aws.amazon.com/config/latest/developerguide", "https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html"], "score-category": "Detect", "score-value": "Minimal", "score-comment": "This control provides significant coverage for a minority of this technique's sub-techniques, resulting in an overall score of Minimal.", "related-score": true, "tags": []}}, {"metadata": {"mapping-verision": 1, "attack-version": 9, "creation-date": "06/02/2021", "last-update": "06/02/2021", "author": "", "contact": "ctid@mitre-engenuity.org", "organization": "", "platform": "AWS", "platform-version": "", "mapping-type": "scoring"}, "attack-object": {"id": "T1609", "name": "Container Administration Command", "value": "AWS Config", "mapping-pattern": "", "secondary-property": "", "comments": "Mappings are based on the set of AWS managed rules provided by AWS Config, which are predefined rules that AWS Config uses to test for compliance with common best practices.\nAWS Config rules can be set to one of two types, \"configuration changes\" and \"periodic\", which are evaluated upon configuration changes and at a user-defined period, respectively.", "references": ["https://docs.aws.amazon.com/config", "https://docs.aws.amazon.com/config/latest/developerguide", "https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html"], "score-category": "Protect", "score-value": "Partial", "score-comment": "The \"eks-endpoint-no-public-access\" managed rule can identify whether Amazon Elastic Kubernetes Service (Amazon EKS) endpoints are misconfigured to allow public endpoint access, which should be fixed in order to prevent malicious external access to the Kubernetes API server, including malicious attempts to execute commands via the API. It is run periodically and only provides partial coverage because it is specific to public access, resulting in an overall score of Partial.", "related-score": false, "tags": []}}, {"metadata": {"mapping-verision": 1, "attack-version": 9, "creation-date": "06/02/2021", "last-update": "06/02/2021", "author": "", "contact": "ctid@mitre-engenuity.org", "organization": "", "platform": "AWS", "platform-version": "", "mapping-type": "scoring"}, "attack-object": {"id": "T1610", "name": "Deploy Container", "value": "AWS Config", "mapping-pattern": "", "secondary-property": "", "comments": "Mappings are based on the set of AWS managed rules provided by AWS Config, which are predefined rules that AWS Config uses to test for compliance with common best practices.\nAWS Config rules can be set to one of two types, \"configuration changes\" and \"periodic\", which are evaluated upon configuration changes and at a user-defined period, respectively.", "references": ["https://docs.aws.amazon.com/config", "https://docs.aws.amazon.com/config/latest/developerguide", "https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html"], "score-category": "Protect", "score-value": "Partial", "score-comment": "The \"eks-endpoint-no-public-access\" managed rule can identify whether Amazon Elastic Kubernetes Service (Amazon EKS) endpoints are misconfigured to allow public endpoint access, which should be fixed in order to prevent malicious external access to the Kubernetes API server, including malicious attempts to deploy containers. It is run periodically and only provides partial coverage because it is specific to public access, resulting in an overall score of Partial.", "related-score": false, "tags": []}}, {"metadata": {"mapping-verision": 1, "attack-version": 9, "creation-date": "06/02/2021", "last-update": "06/02/2021", "author": "", "contact": "ctid@mitre-engenuity.org", "organization": "", "platform": "AWS", "platform-version": "", "mapping-type": "scoring"}, "attack-object": {"id": "T1611", "name": "Escape to Host", "value": "AWS Config", "mapping-pattern": "", "secondary-property": "", "comments": "Mappings are based on the set of AWS managed rules provided by AWS Config, which are predefined rules that AWS Config uses to test for compliance with common best practices.\nAWS Config rules can be set to one of two types, \"configuration changes\" and \"periodic\", which are evaluated upon configuration changes and at a user-defined period, respectively.", "references": ["https://docs.aws.amazon.com/config", "https://docs.aws.amazon.com/config/latest/developerguide", "https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html"], "score-category": "Protect", "score-value": "Partial", "score-comment": "The \"ecs-task-definition-user-for-host-mode-check\" managed rule can identify Amazon Elastic Container Service (ECS) task definitions for containers with host networking mode and 'privileged' or 'user' container definitions, which may enable adversaries to break out of containers and gain access to the underlying host. It is run on configuration changes. Coverage is partial, since adversaries may find other means to escape a container to the underlying host, resulting in an overall score of Partial.", "related-score": false, "tags": []}}, {"metadata": {"mapping-verision": 1, "attack-version": 9, "creation-date": "06/02/2021", "last-update": "06/02/2021", "author": "", "contact": "ctid@mitre-engenuity.org", "organization": "", "platform": "AWS", "platform-version": "", "mapping-type": "scoring"}, "attack-object": {"id": "T1613", "name": "Container and Resource Discovery", "value": "AWS Config", "mapping-pattern": "", "secondary-property": "", "comments": "Mappings are based on the set of AWS managed rules provided by AWS Config, which are predefined rules that AWS Config uses to test for compliance with common best practices.\nAWS Config rules can be set to one of two types, \"configuration changes\" and \"periodic\", which are evaluated upon configuration changes and at a user-defined period, respectively.", "references": ["https://docs.aws.amazon.com/config", "https://docs.aws.amazon.com/config/latest/developerguide", "https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html"], "score-category": "Protect", "score-value": "Partial", "score-comment": "The \"eks-endpoint-no-public-access\" managed rule can identify whether Amazon Elastic Kubernetes Service (Amazon EKS) endpoints are misconfigured to allow public endpoint access, which should be fixed in order to prevent malicious external access to the Kubernetes API server, including malicious attempts to discover containers and other resources. It is run periodically and only provides partial coverage because it is specific to public access, resulting in an overall score of Partial.", "related-score": false, "tags": []}}]