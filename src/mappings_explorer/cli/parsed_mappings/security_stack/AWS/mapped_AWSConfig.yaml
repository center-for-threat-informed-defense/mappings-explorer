- attack-object:
    comments: 'Mappings are based on the set of AWS managed rules provided by AWS
      Config, which are predefined rules that AWS Config uses to test for compliance
      with common best practices.

      AWS Config rules can be set to one of two types, "configuration changes" and
      "periodic", which are evaluated upon configuration changes and at a user-defined
      period, respectively.'
    id: T1020
    mapping-pattern: ''
    name: Automated Exfiltration
    references:
    - https://docs.aws.amazon.com/config
    - https://docs.aws.amazon.com/config/latest/developerguide
    - https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html
    related-score: true
    score-category: Protect
    score-comment: This control provides partial coverage for this technique's only
      sub-technique, but without specific coverage for its procedures, resulting in
      an overall score of Minimal.
    score-value: Minimal
    secondary-property: ''
    tags: []
    value: AWS Config
  metadata:
    attack-version: 9
    author: ''
    contact: ctid@mitre-engenuity.org
    creation-date: 06/02/2021
    last-update: 06/02/2021
    mapping-type: scoring
    mapping-verision: 1
    organization: ''
    platform: AWS
    platform-version: ''
- attack-object:
    comments: 'Mappings are based on the set of AWS managed rules provided by AWS
      Config, which are predefined rules that AWS Config uses to test for compliance
      with common best practices.

      AWS Config rules can be set to one of two types, "configuration changes" and
      "periodic", which are evaluated upon configuration changes and at a user-defined
      period, respectively.'
    id: T1040
    mapping-pattern: ''
    name: Network Sniffing
    references:
    - https://docs.aws.amazon.com/config
    - https://docs.aws.amazon.com/config/latest/developerguide
    - https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html
    related-score: false
    score-category: Protect
    score-comment: 'The following AWS Config managed rules can identify configuration
      problems that should be fixed in order to ensure SSL/TLS encryption is enabled
      to protect network traffic: "acm-certificate-expiration-check" for nearly expired
      certificates in AWS Certificate Manager (ACM); "alb-http-to-https-redirection-check"
      for Application Load Balancer (ALB) HTTP listeners; "api-gw-ssl-enabled" for
      API Gateway REST API stages; "cloudfront-custom-ssl-certificate", "cloudfront-sni-enabled",
      and "cloudfront-viewer-policy-https", for Amazon CloudFront distributions; "elb-acm-certificate-required",
      "elb-custom-security-policy-ssl-check", "elb-predefined-security-policy-ssl-check",
      and "elb-tls-https-listeners-only" for Elastic Load Balancing (ELB) Classic
      Load Balancer listeners; "redshift-require-tls-ssl" for Amazon Redshift cluster
      connections to SQL clients; "s3-bucket-ssl-requests-only" for requests for S3
      bucket contents; and "elasticsearch-node-to-node-encryption-check" for Amazon
      ElasticSearch Service node-to-node communications.

      The following AWS Config managed rules can identify configuration problems that
      should be fixed in order to ensure that private traffic is routed securely and
      only within VPCs rather than on the public Internet: "api-gw-endpoint-type-check"
      for Amazon API Gateway APIs, "elasticsearch-in-vpc-only" for Amazon ElasticSearch
      Service domains, and "redshift-enhanced-vpc-routing-enabled" for Amazon Redshift
      cluster traffic.

      All of these are run on configuration changes except "alb-http-to-https-redirection-check"
      and "elasticsearch-in-vpc-only", which are run periodically. Coverage factor
      is partial for these rules, since they are specific to a subset of the available
      AWS services and can only mitigate behavior for adversaries who are unable to
      decrypt the relevant traffic and/or do not have access to traffic within the
      relevant VPCs, resulting in an overall score of Partial.'
    score-value: Partial
    secondary-property: ''
    tags: []
    value: AWS Config
  metadata:
    attack-version: 9
    author: ''
    contact: ctid@mitre-engenuity.org
    creation-date: 06/02/2021
    last-update: 06/02/2021
    mapping-type: scoring
    mapping-verision: 1
    organization: ''
    platform: AWS
    platform-version: ''
- attack-object:
    comments: 'Mappings are based on the set of AWS managed rules provided by AWS
      Config, which are predefined rules that AWS Config uses to test for compliance
      with common best practices.

      AWS Config rules can be set to one of two types, "configuration changes" and
      "periodic", which are evaluated upon configuration changes and at a user-defined
      period, respectively.'
    id: T1053
    mapping-pattern: ''
    name: Scheduled Task/Job
    references:
    - https://docs.aws.amazon.com/config
    - https://docs.aws.amazon.com/config/latest/developerguide
    - https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html
    related-score: true
    score-category: Protect
    score-comment: This control provides partial coverage for one of this technique's
      sub-techniques, resulting in an overall score of Minimal.
    score-value: Minimal
    secondary-property: ''
    tags: []
    value: AWS Config
  metadata:
    attack-version: 9
    author: ''
    contact: ctid@mitre-engenuity.org
    creation-date: 06/02/2021
    last-update: 06/02/2021
    mapping-type: scoring
    mapping-verision: 1
    organization: ''
    platform: AWS
    platform-version: ''
- attack-object:
    comments: 'Mappings are based on the set of AWS managed rules provided by AWS
      Config, which are predefined rules that AWS Config uses to test for compliance
      with common best practices.

      AWS Config rules can be set to one of two types, "configuration changes" and
      "periodic", which are evaluated upon configuration changes and at a user-defined
      period, respectively.'
    id: T1068
    mapping-pattern: ''
    name: Exploitation for Privilege Escalation
    references:
    - https://docs.aws.amazon.com/config
    - https://docs.aws.amazon.com/config/latest/developerguide
    - https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html
    related-score: false
    score-category: Protect
    score-comment: 'The "ec2-managedinstance-applications-blacklisted" managed rule
      verifies that a pre-defined list of applications are not installed on specified
      managed instances. It can be used to identify the presence of vulnerable applications
      (prompting removal before they can be exploited) and/or to identify the presence
      of allowed packages below a minimum version (prompting updates before they can
      be exploited). The "ec2-managedinstance-platform-check" managed rule verifies
      that managed instances are running desired platform types, including using a
      desired version (as opposed to an out-of-date one). Both can reduce instances''
      attack surface for adversary exploitation, including for privilege escalation.

      The "ecs-task-definition-user-for-host-mode-check" managed rule can identify
      Amazon Elastic Container Service (ECS) task definitions for containers with
      host networking mode and ''privileged'' or ''user'' container definitions, which
      may enable adversaries to break out of containers and gain access to the underlying
      host, increasing their access and privileges.

      All of these are run on configuration changes. Coverage factor is partial for
      these rules, since they are specific to a subset of the available AWS services
      and will only protect against certain forms of identifiable exploitation, resulting
      in an overall score of Partial.'
    score-value: Partial
    secondary-property: ''
    tags: []
    value: AWS Config
  metadata:
    attack-version: 9
    author: ''
    contact: ctid@mitre-engenuity.org
    creation-date: 06/02/2021
    last-update: 06/02/2021
    mapping-type: scoring
    mapping-verision: 1
    organization: ''
    platform: AWS
    platform-version: ''
- attack-object:
    comments: 'Mappings are based on the set of AWS managed rules provided by AWS
      Config, which are predefined rules that AWS Config uses to test for compliance
      with common best practices.

      AWS Config rules can be set to one of two types, "configuration changes" and
      "periodic", which are evaluated upon configuration changes and at a user-defined
      period, respectively.'
    id: T1078
    mapping-pattern: ''
    name: Valid Accounts
    references:
    - https://docs.aws.amazon.com/config
    - https://docs.aws.amazon.com/config/latest/developerguide
    - https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html
    related-score: true
    score-category: Protect
    score-comment: This control provides significant coverage for one of this technique's
      sub-techniques, resulting in an overall score of Minimal.
    score-value: Minimal
    secondary-property: ''
    tags: []
    value: AWS Config
  metadata:
    attack-version: 9
    author: ''
    contact: ctid@mitre-engenuity.org
    creation-date: 06/02/2021
    last-update: 06/02/2021
    mapping-type: scoring
    mapping-verision: 1
    organization: ''
    platform: AWS
    platform-version: ''
- attack-object:
    comments: 'Mappings are based on the set of AWS managed rules provided by AWS
      Config, which are predefined rules that AWS Config uses to test for compliance
      with common best practices.

      AWS Config rules can be set to one of two types, "configuration changes" and
      "periodic", which are evaluated upon configuration changes and at a user-defined
      period, respectively.'
    id: T1098
    mapping-pattern: ''
    name: Account Manipulation
    references:
    - https://docs.aws.amazon.com/config
    - https://docs.aws.amazon.com/config/latest/developerguide
    - https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html
    related-score: true
    score-category: Protect
    score-comment: This control provides significant coverage for one of this technique's
      sub-techniques, resulting in an overall score of Minimal.
    score-value: Minimal
    secondary-property: ''
    tags: []
    value: AWS Config
  metadata:
    attack-version: 9
    author: ''
    contact: ctid@mitre-engenuity.org
    creation-date: 06/02/2021
    last-update: 06/02/2021
    mapping-type: scoring
    mapping-verision: 1
    organization: ''
    platform: AWS
    platform-version: ''
- attack-object:
    comments: 'Mappings are based on the set of AWS managed rules provided by AWS
      Config, which are predefined rules that AWS Config uses to test for compliance
      with common best practices.

      AWS Config rules can be set to one of two types, "configuration changes" and
      "periodic", which are evaluated upon configuration changes and at a user-defined
      period, respectively.'
    id: T1110
    mapping-pattern: ''
    name: Brute Force
    references:
    - https://docs.aws.amazon.com/config
    - https://docs.aws.amazon.com/config/latest/developerguide
    - https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html
    related-score: true
    score-category: Protect
    score-comment: This control provides significant coverage for all of this technique's
      sub-techniques, resulting in an overall score of Significant.
    score-value: Significant
    secondary-property: ''
    tags: []
    value: AWS Config
  metadata:
    attack-version: 9
    author: ''
    contact: ctid@mitre-engenuity.org
    creation-date: 06/02/2021
    last-update: 06/02/2021
    mapping-type: scoring
    mapping-verision: 1
    organization: ''
    platform: AWS
    platform-version: ''
- attack-object:
    comments: 'Mappings are based on the set of AWS managed rules provided by AWS
      Config, which are predefined rules that AWS Config uses to test for compliance
      with common best practices.

      AWS Config rules can be set to one of two types, "configuration changes" and
      "periodic", which are evaluated upon configuration changes and at a user-defined
      period, respectively.'
    id: T1119
    mapping-pattern: ''
    name: Automated Collection
    references:
    - https://docs.aws.amazon.com/config
    - https://docs.aws.amazon.com/config/latest/developerguide
    - https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html
    related-score: false
    score-category: Protect
    score-comment: 'The following AWS Config managed rules can identify configuration
      problems that should be fixed in order to ensure that storage volumes are encrypted,
      which may mitigate adversary attempts to automate collection within cloud environments:
      "ec2-ebs-encryption-by-default" which is run periodically and "encrypted-volumes"
      which is run on configuration changes.

      Coverage factor is minimal for these rules, since they are specific to EBS volumes
      and will only prevent certain forms of collection since adversaries with access
      to mounted volumes may be able to decrypt their contents, resulting in an overall
      score of Minimal.'
    score-value: Minimal
    secondary-property: ''
    tags: []
    value: AWS Config
  metadata:
    attack-version: 9
    author: ''
    contact: ctid@mitre-engenuity.org
    creation-date: 06/02/2021
    last-update: 06/02/2021
    mapping-type: scoring
    mapping-verision: 1
    organization: ''
    platform: AWS
    platform-version: ''
- attack-object:
    comments: 'Mappings are based on the set of AWS managed rules provided by AWS
      Config, which are predefined rules that AWS Config uses to test for compliance
      with common best practices.

      AWS Config rules can be set to one of two types, "configuration changes" and
      "periodic", which are evaluated upon configuration changes and at a user-defined
      period, respectively.'
    id: T1136
    mapping-pattern: ''
    name: Create Account
    references:
    - https://docs.aws.amazon.com/config
    - https://docs.aws.amazon.com/config/latest/developerguide
    - https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html
    related-score: true
    score-category: Protect
    score-comment: This control provides partial coverage for one of this technique's
      sub-techniques, resulting in an overall score of Minimal.
    score-value: Minimal
    secondary-property: ''
    tags: []
    value: AWS Config
  metadata:
    attack-version: 9
    author: ''
    contact: ctid@mitre-engenuity.org
    creation-date: 06/02/2021
    last-update: 06/02/2021
    mapping-type: scoring
    mapping-verision: 1
    organization: ''
    platform: AWS
    platform-version: ''
- attack-object:
    comments: 'Mappings are based on the set of AWS managed rules provided by AWS
      Config, which are predefined rules that AWS Config uses to test for compliance
      with common best practices.

      AWS Config rules can be set to one of two types, "configuration changes" and
      "periodic", which are evaluated upon configuration changes and at a user-defined
      period, respectively.'
    id: T1190
    mapping-pattern: ''
    name: Exploit Public-Facing Application
    references:
    - https://docs.aws.amazon.com/config
    - https://docs.aws.amazon.com/config/latest/developerguide
    - https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html
    related-score: false
    score-category: Protect
    score-comment: 'The following AWS Config managed rules can identify configuration
      problems that should be fixed in order to ensure that applications intended
      for internal use cannot be accessed externally for exploitation: "api-gw-endpoint-type-check"
      can ensure that Amazon API Gateway APIs are private and can only be accessed
      from within VPCs, "elasticsearch-in-vpc-only" can ensure that Amazon ElasticSearch
      Service (Amazon ES) domains are in the same VPC and the domain endpoint is not
      public, "lambda-function-public-access-prohibited" can verify that AWS Lambda
      functions are not publicly available, and "ec2-instance-no-public-ip" can verify
      whether EC2 instances have public IP addresses.

      The following AWS Config managed rules can identify configuration problems that
      should be fixed in order to ensure that insecure applications are not installed
      and installed packages are kept updated, reducing the likelihood of adversary
      exploitation: the "ec2-managedinstance-applications-blacklisted" managed rule
      verifies that a pre-defined list of applications are not installed on specified
      managed instances. It can be used to identify the presence of vulnerable applications
      (prompting removal before they can be exploited) and/or to identify the presence
      of allowed packages below a minimum version (prompting updates before they can
      be exploited). The "ec2-managedinstance-platform-check" managed rule verifies
      that managed instances are running desired platform types, including using a
      desired version (as opposed to an out-of-date one). Both can reduce instances''
      attack surface for adversary exploitation. "rds-automatic-minor-version-upgrade-enabled"
      can verify that Amazon RDS is being patched, and "elastic-beanstalk-managed-updates-enabled"
      can verify that Elastic Beanstalk is being patched.

      Coverage factor is partial for these rules, since they are specific to a subset
      of the available AWS services that can be used to host public-facing applications
      and will only protect against certain forms of identifiable exploitation, resulting
      in an overall score of Partial.'
    score-value: Partial
    secondary-property: ''
    tags: []
    value: AWS Config
  metadata:
    attack-version: 9
    author: ''
    contact: ctid@mitre-engenuity.org
    creation-date: 06/02/2021
    last-update: 06/02/2021
    mapping-type: scoring
    mapping-verision: 1
    organization: ''
    platform: AWS
    platform-version: ''
- attack-object:
    comments: 'Mappings are based on the set of AWS managed rules provided by AWS
      Config, which are predefined rules that AWS Config uses to test for compliance
      with common best practices.

      AWS Config rules can be set to one of two types, "configuration changes" and
      "periodic", which are evaluated upon configuration changes and at a user-defined
      period, respectively.'
    id: T1203
    mapping-pattern: ''
    name: Exploitation for Client Execution
    references:
    - https://docs.aws.amazon.com/config
    - https://docs.aws.amazon.com/config/latest/developerguide
    - https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html
    related-score: false
    score-category: Protect
    score-comment: 'The "ec2-managedinstance-applications-blacklisted" managed rule
      verifies that a pre-defined list of applications are not installed on specified
      managed instances. It can be used to identify the presence of vulnerable applications
      (prompting removal before they can be exploited) and/or to identify the presence
      of allowed packages below a minimum version (prompting updates before they can
      be exploited). The "ec2-managedinstance-platform-check" managed rule verifies
      that managed instances are running desired platform types, including using a
      desired version (as opposed to an out-of-date one). Both can reduce instances''
      attack surface for adversary exploitation, including for client execution.

      All of these are run on configuration changes. Coverage factor is partial for
      these rules, since they are specific to a subset of the available AWS services
      and will only protect against certain forms of identifiable exploitation, resulting
      in an overall score of Partial.'
    score-value: Partial
    secondary-property: ''
    tags: []
    value: AWS Config
  metadata:
    attack-version: 9
    author: ''
    contact: ctid@mitre-engenuity.org
    creation-date: 06/02/2021
    last-update: 06/02/2021
    mapping-type: scoring
    mapping-verision: 1
    organization: ''
    platform: AWS
    platform-version: ''
- attack-object:
    comments: 'Mappings are based on the set of AWS managed rules provided by AWS
      Config, which are predefined rules that AWS Config uses to test for compliance
      with common best practices.

      AWS Config rules can be set to one of two types, "configuration changes" and
      "periodic", which are evaluated upon configuration changes and at a user-defined
      period, respectively.'
    id: T1210
    mapping-pattern: ''
    name: Exploitation of Remote Services
    references:
    - https://docs.aws.amazon.com/config
    - https://docs.aws.amazon.com/config/latest/developerguide
    - https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html
    related-score: false
    score-category: Protect
    score-comment: 'The "ec2-managedinstance-applications-blacklisted" managed rule
      verifies that a pre-defined list of applications are not installed on specified
      managed instances. It can be used to identify the presence of vulnerable applications
      (prompting removal before they can be exploited) and/or to identify the presence
      of allowed packages below a minimum version (prompting updates before they can
      be exploited), both of which can reduce instances'' attack surface for adversary
      exploitation, including via those applications'' exposed remote services. The
      "ec2-instance-no-public-ip" managed rule identifies EC2 instances with public
      IP associations, which should be removed unless necessary to avoid exposing
      services publicly for adversary access.

      All of these are run on configuration changes. Coverage factor is partial for
      these rules, since they are specific to a subset of the available AWS services
      and will only protect against certain forms of identifiable exploitation, resulting
      in an overall score of Partial.'
    score-value: Partial
    secondary-property: ''
    tags: []
    value: AWS Config
  metadata:
    attack-version: 9
    author: ''
    contact: ctid@mitre-engenuity.org
    creation-date: 06/02/2021
    last-update: 06/02/2021
    mapping-type: scoring
    mapping-verision: 1
    organization: ''
    platform: AWS
    platform-version: ''
- attack-object:
    comments: 'Mappings are based on the set of AWS managed rules provided by AWS
      Config, which are predefined rules that AWS Config uses to test for compliance
      with common best practices.

      AWS Config rules can be set to one of two types, "configuration changes" and
      "periodic", which are evaluated upon configuration changes and at a user-defined
      period, respectively.'
    id: T1211
    mapping-pattern: ''
    name: Exploitation for Defense Evasion
    references:
    - https://docs.aws.amazon.com/config
    - https://docs.aws.amazon.com/config/latest/developerguide
    - https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html
    related-score: false
    score-category: Protect
    score-comment: 'The "ec2-managedinstance-applications-blacklisted" managed rule
      verifies that a pre-defined list of applications are not installed on specified
      managed instances. It can be used to identify the presence of vulnerable applications
      (prompting removal before they can be exploited) and/or to identify the presence
      of allowed packages below a minimum version (prompting updates before they can
      be exploited). The "ec2-managedinstance-platform-check" managed rule verifies
      that managed instances are running desired platform types, including using a
      desired version (as opposed to an out-of-date one). Both can reduce instances''
      attack surface for adversary exploitation, including for defense evasion.

      All of these are run on configuration changes. Coverage factor is partial for
      these rules, since they are specific to a subset of the available AWS services
      and will only protect against certain forms of identifiable exploitation, resulting
      in an overall score of Partial.'
    score-value: Partial
    secondary-property: ''
    tags: []
    value: AWS Config
  metadata:
    attack-version: 9
    author: ''
    contact: ctid@mitre-engenuity.org
    creation-date: 06/02/2021
    last-update: 06/02/2021
    mapping-type: scoring
    mapping-verision: 1
    organization: ''
    platform: AWS
    platform-version: ''
- attack-object:
    comments: 'Mappings are based on the set of AWS managed rules provided by AWS
      Config, which are predefined rules that AWS Config uses to test for compliance
      with common best practices.

      AWS Config rules can be set to one of two types, "configuration changes" and
      "periodic", which are evaluated upon configuration changes and at a user-defined
      period, respectively.'
    id: T1212
    mapping-pattern: ''
    name: Exploitation for Credential Access
    references:
    - https://docs.aws.amazon.com/config
    - https://docs.aws.amazon.com/config/latest/developerguide
    - https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html
    related-score: false
    score-category: Protect
    score-comment: 'The "ec2-managedinstance-applications-blacklisted" managed rule
      verifies that a pre-defined list of applications are not installed on specified
      managed instances. It can be used to identify the presence of vulnerable applications
      (prompting removal before they can be exploited) and/or to identify the presence
      of allowed packages below a minimum version (prompting updates before they can
      be exploited). The "ec2-managedinstance-platform-check" managed rule verifies
      that managed instances are running desired platform types, including using a
      desired version (as opposed to an out-of-date one).Both can reduce instances''
      attack surface for adversary exploitation, including for credential access.

      All of these are run on configuration changes. Coverage factor is partial for
      these rules, since they are specific to a subset of the available AWS services
      and will only protect against certain forms of identifiable exploitation, resulting
      in an overall score of Partial.'
    score-value: Partial
    secondary-property: ''
    tags: []
    value: AWS Config
  metadata:
    attack-version: 9
    author: ''
    contact: ctid@mitre-engenuity.org
    creation-date: 06/02/2021
    last-update: 06/02/2021
    mapping-type: scoring
    mapping-verision: 1
    organization: ''
    platform: AWS
    platform-version: ''
- attack-object:
    comments: 'Mappings are based on the set of AWS managed rules provided by AWS
      Config, which are predefined rules that AWS Config uses to test for compliance
      with common best practices.

      AWS Config rules can be set to one of two types, "configuration changes" and
      "periodic", which are evaluated upon configuration changes and at a user-defined
      period, respectively.'
    id: T1204
    mapping-pattern: ''
    name: User Execution
    references:
    - https://docs.aws.amazon.com/config
    - https://docs.aws.amazon.com/config/latest/developerguide
    - https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html
    related-score: true
    score-category: Detect
    score-comment: This control provides significant coverage for one of this technique's
      sub-techniques, resulting in an overall score of Minimal.
    score-value: Minimal
    secondary-property: ''
    tags: []
    value: AWS Config
  metadata:
    attack-version: 9
    author: ''
    contact: ctid@mitre-engenuity.org
    creation-date: 06/02/2021
    last-update: 06/02/2021
    mapping-type: scoring
    mapping-verision: 1
    organization: ''
    platform: AWS
    platform-version: ''
- attack-object:
    comments: 'Mappings are based on the set of AWS managed rules provided by AWS
      Config, which are predefined rules that AWS Config uses to test for compliance
      with common best practices.

      AWS Config rules can be set to one of two types, "configuration changes" and
      "periodic", which are evaluated upon configuration changes and at a user-defined
      period, respectively.'
    id: T1485
    mapping-pattern: ''
    name: Data Destruction
    references:
    - https://docs.aws.amazon.com/config
    - https://docs.aws.amazon.com/config/latest/developerguide
    - https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html
    related-score: false
    score-category: Protect
    score-comment: 'The following AWS Config managed rules can identify configuration
      problems that should be fixed in order to prevent malicious write access to
      data within Amazon Simple Storage Service (S3) storage, which may include data
      destruction: "s3-bucket-blacklisted-actions-prohibited" checks whether bucket
      policies prohibit disallowed actions (including S3:DeleteObject) for principals
      from other AWS accounts, "s3-bucket-default-lock-enabled" checks whether a bucket
      that should be locked in write-once-read-many (WORM) mode is configured to prevent
      modification, and "s3-bucket-public-write-prohibited" checks whether a bucket
      is configured to allow public access and modification. All of these controls
      are run on configuration changes.

      The following AWS Config managed rules can identify configuration problems that
      should be fixed in order to ensure backups and redundancy are in place which
      can mitigate the effects of data destruction: "aurora-mysql-backtracking-enabled"
      for data in Aurora MySQL; "db-instance-backup-enabled" and "rds-in-backup-plan"
      for Amazon Relational Database Service (RDS) data; "dynamodb-in-backup-plan"
      and "dynamodb-pitr-enabled" for Amazon DynamoDB table contents; "ebs-in-backup-plan"
      for Elastic Block Store (EBS) volumes; "efs-in-backup-plan" for Amazon Elastic
      File System (EFS) file systems; "elasticache-redis-cluster-automatic-backup-check"
      for Amazon ElastiCache Redis cluster data; "redshift-backup-enabled" and "redshift-cluster-maintenancesettings-check"
      for Redshift; "s3-bucket-replication-enabled" and "s3-bucket-versioning-enabled"
      for S3 storage; and "cloudfront-origin-failover-enabled" for CloudFront.

      The following AWS Config managed rules provide specific detections for configuration
      problems that should be fixed in order to prevent malicious deletion of specific
      data: "elb-deletion-protection-enabled" for Elastic Block Store (EBS) volumes,
      and "rds-cluster-deletion-protection-enabled" and "rds-instance-deletion-protection-enabled"
      for RDS data.

      Coverage factor is partial for these rules, since they are specific to a subset
      of the available AWS services and will only protect certain types of data against
      destruction, resulting in an overall score of Partial.'
    score-value: Partial
    secondary-property: ''
    tags: []
    value: AWS Config
  metadata:
    attack-version: 9
    author: ''
    contact: ctid@mitre-engenuity.org
    creation-date: 06/02/2021
    last-update: 06/02/2021
    mapping-type: scoring
    mapping-verision: 1
    organization: ''
    platform: AWS
    platform-version: ''
- attack-object:
    comments: 'Mappings are based on the set of AWS managed rules provided by AWS
      Config, which are predefined rules that AWS Config uses to test for compliance
      with common best practices.

      AWS Config rules can be set to one of two types, "configuration changes" and
      "periodic", which are evaluated upon configuration changes and at a user-defined
      period, respectively.'
    id: T1486
    mapping-pattern: ''
    name: Data Encrypted for Impact
    references:
    - https://docs.aws.amazon.com/config
    - https://docs.aws.amazon.com/config/latest/developerguide
    - https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html
    related-score: false
    score-category: Protect
    score-comment: 'The following AWS Config managed rules can identify configuration
      problems that should be fixed in order to prevent malicious changes to data
      encryption within Amazon Simple Storage Service (S3) storage: "s3-bucket-blacklisted-actions-prohibited"
      checks whether bucket policies prohibit disallowed actions (including encryption
      configuration changes) for principals from other AWS accounts, "s3-bucket-default-lock-enabled"
      checks whether a bucket that should be locked in write-once-read-many (WORM)
      mode is configured to prevent modification, and "s3-bucket-public-write-prohibited"
      checks whether a bucket is configured to allow public access and modification.
      All of these controls are run on configuration changes.

      The following AWS Config managed rules can identify configuration problems that
      should be fixed in order to ensure backups and redundancy are in place which
      can mitigate the effects of malicious changes to data encryption: "aurora-mysql-backtracking-enabled"
      for data in Aurora MySQL; "db-instance-backup-enabled" and "rds-in-backup-plan"
      for Amazon Relational Database Service (RDS) data; "dynamodb-in-backup-plan"
      and "dynamodb-pitr-enabled" for Amazon DynamoDB table contents; "ebs-in-backup-plan"
      for Elastic Block Store (EBS) volumes; "efs-in-backup-plan" for Amazon Elastic
      File System (EFS) file systems; "elasticache-redis-cluster-automatic-backup-check"
      for Amazon ElastiCache Redis cluster data; "redshift-backup-enabled" and "redshift-cluster-maintenancesettings-check"
      for Redshift; "s3-bucket-replication-enabled" and "s3-bucket-versioning-enabled"
      for S3 storage; and "cloudfront-origin-failover-enabled" for CloudFront.

      Coverage factor is partial for these rules, since they are specific to a subset
      of the available AWS services and will only protect certain types of data against
      malicious encryption changes, resulting in an overall score of Partial.'
    score-value: Partial
    secondary-property: ''
    tags: []
    value: AWS Config
  metadata:
    attack-version: 9
    author: ''
    contact: ctid@mitre-engenuity.org
    creation-date: 06/02/2021
    last-update: 06/02/2021
    mapping-type: scoring
    mapping-verision: 1
    organization: ''
    platform: AWS
    platform-version: ''
- attack-object:
    comments: 'Mappings are based on the set of AWS managed rules provided by AWS
      Config, which are predefined rules that AWS Config uses to test for compliance
      with common best practices.

      AWS Config rules can be set to one of two types, "configuration changes" and
      "periodic", which are evaluated upon configuration changes and at a user-defined
      period, respectively.'
    id: T1491
    mapping-pattern: ''
    name: Defacement
    references:
    - https://docs.aws.amazon.com/config
    - https://docs.aws.amazon.com/config/latest/developerguide
    - https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html
    related-score: true
    score-category: Protect
    score-comment: This control provides significant coverage for all of this technique's
      sub-techniques, resulting in an overall score of Significant.
    score-value: Significant
    secondary-property: ''
    tags: []
    value: AWS Config
  metadata:
    attack-version: 9
    author: ''
    contact: ctid@mitre-engenuity.org
    creation-date: 06/02/2021
    last-update: 06/02/2021
    mapping-type: scoring
    mapping-verision: 1
    organization: ''
    platform: AWS
    platform-version: ''
- attack-object:
    comments: 'Mappings are based on the set of AWS managed rules provided by AWS
      Config, which are predefined rules that AWS Config uses to test for compliance
      with common best practices.

      AWS Config rules can be set to one of two types, "configuration changes" and
      "periodic", which are evaluated upon configuration changes and at a user-defined
      period, respectively.'
    id: T1496
    mapping-pattern: ''
    name: Resource Hijacking
    references:
    - https://docs.aws.amazon.com/config
    - https://docs.aws.amazon.com/config/latest/developerguide
    - https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html
    related-score: false
    score-category: Detect
    score-comment: 'The following AWS Config managed rules can identify configuration
      problems that should be fixed in order to ensure alarms exist for spikes in
      resource utilization, which help to identify malicious use of resources within
      a cloud environment: "cloudwatch-alarm-action-check", "cloudwatch-alarm-resource-check",
      "cloudwatch-alarm-settings-check", "desired-instance-tenancy", "desired-instance-type",
      "dynamodb-autoscaling-enabled", "dynamodb-throughput-limit-check", "ec2-instance-detailed-monitoring-enabled",
      and "rds-enhanced-monitoring-enabled".

      Coverage factor is partial for these rules, since they are specific to a subset
      of the available AWS services and will only detect resource hijacking that results
      in a change in utilization that is significant enough to trigger alarms, resulting
      in an overall score of Partial.'
    score-value: Partial
    secondary-property: ''
    tags: []
    value: AWS Config
  metadata:
    attack-version: 9
    author: ''
    contact: ctid@mitre-engenuity.org
    creation-date: 06/02/2021
    last-update: 06/02/2021
    mapping-type: scoring
    mapping-verision: 1
    organization: ''
    platform: AWS
    platform-version: ''
- attack-object:
    comments: 'Mappings are based on the set of AWS managed rules provided by AWS
      Config, which are predefined rules that AWS Config uses to test for compliance
      with common best practices.

      AWS Config rules can be set to one of two types, "configuration changes" and
      "periodic", which are evaluated upon configuration changes and at a user-defined
      period, respectively.'
    id: T1498
    mapping-pattern: ''
    name: Network Denial of Service
    references:
    - https://docs.aws.amazon.com/config
    - https://docs.aws.amazon.com/config/latest/developerguide
    - https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html
    related-score: true
    score-category: Protect
    score-comment: This control provides minimal coverage for this technique's sub-techniques
      as well as its procedures, resulting in an overall score of Minimal.
    score-value: Minimal
    secondary-property: ''
    tags: []
    value: AWS Config
  metadata:
    attack-version: 9
    author: ''
    contact: ctid@mitre-engenuity.org
    creation-date: 06/02/2021
    last-update: 06/02/2021
    mapping-type: scoring
    mapping-verision: 1
    organization: ''
    platform: AWS
    platform-version: ''
- attack-object:
    comments: 'Mappings are based on the set of AWS managed rules provided by AWS
      Config, which are predefined rules that AWS Config uses to test for compliance
      with common best practices.

      AWS Config rules can be set to one of two types, "configuration changes" and
      "periodic", which are evaluated upon configuration changes and at a user-defined
      period, respectively.'
    id: T1499
    mapping-pattern: ''
    name: Endpoint Denial of Service
    references:
    - https://docs.aws.amazon.com/config
    - https://docs.aws.amazon.com/config/latest/developerguide
    - https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html
    related-score: true
    score-category: Protect
    score-comment: This control provides minimal coverage for this technique's sub-techniques
      as well as its procedures, resulting in an overall score of Minimal.
    score-value: Minimal
    secondary-property: ''
    tags: []
    value: AWS Config
  metadata:
    attack-version: 9
    author: ''
    contact: ctid@mitre-engenuity.org
    creation-date: 06/02/2021
    last-update: 06/02/2021
    mapping-type: scoring
    mapping-verision: 1
    organization: ''
    platform: AWS
    platform-version: ''
- attack-object:
    comments: 'Mappings are based on the set of AWS managed rules provided by AWS
      Config, which are predefined rules that AWS Config uses to test for compliance
      with common best practices.

      AWS Config rules can be set to one of two types, "configuration changes" and
      "periodic", which are evaluated upon configuration changes and at a user-defined
      period, respectively.'
    id: T1525
    mapping-pattern: ''
    name: Implant Internal Image
    references:
    - https://docs.aws.amazon.com/config
    - https://docs.aws.amazon.com/config/latest/developerguide
    - https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html
    related-score: false
    score-category: Detect
    score-comment: 'The following AWS Config managed rules can identify running instances
      that are not using AMIs within a specified allow list: "approved-amis-by-id"
      and "approved-amis-by-tag", both of which are run on configuration changes.
      This does not provide detection of the image implanting itself, but does provide
      detection for any subsequent use of images that are implanted and not present
      within the allow list, resulting in a score of Minimal.'
    score-value: Minimal
    secondary-property: ''
    tags: []
    value: AWS Config
  metadata:
    attack-version: 9
    author: ''
    contact: ctid@mitre-engenuity.org
    creation-date: 06/02/2021
    last-update: 06/02/2021
    mapping-type: scoring
    mapping-verision: 1
    organization: ''
    platform: AWS
    platform-version: ''
- attack-object:
    comments: 'Mappings are based on the set of AWS managed rules provided by AWS
      Config, which are predefined rules that AWS Config uses to test for compliance
      with common best practices.

      AWS Config rules can be set to one of two types, "configuration changes" and
      "periodic", which are evaluated upon configuration changes and at a user-defined
      period, respectively.'
    id: T1530
    mapping-pattern: ''
    name: Data from Cloud Storage Object
    references:
    - https://docs.aws.amazon.com/config
    - https://docs.aws.amazon.com/config/latest/developerguide
    - https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html
    related-score: false
    score-category: Protect
    score-comment: 'The following AWS Config managed rules can identify configuration
      problems that should be fixed in order to prevent malicious access of data within
      Amazon Simple Storage Service (S3) storage: "s3-account-level-public-access-blocks",
      "s3-bucket-level-public-access-prohibited", "s3-bucket-public-read-prohibited",
      "s3-bucket-policy-not-more-permissive", "cloudfront-origin-access-identity-enabled",
      and "cloudfront-default-root-object-configured" identify objects that are publicly
      available or subject to overly permissive access policies; "s3-bucket-blacklisted-actions-prohibited"
      checks whether bucket policies prohibit disallowed actions for principals from
      other AWS accounts; and "s3-bucket-policy-grantee-check" checks whether bucket
      policies appropriately control which AWS principals, federated users, service
      principals, IP addresses, and VPCs have access. All of these controls are run
      on configuration changes.

      The following AWS Config managed rules can identify configuration problems that
      should be fixed in order to prevent malicious access of data from other AWS
      services: "dms-replication-not-public" for AWS Database Migration Service; "emr-master-no-public-ip"
      for Amazon Elastic MapReduce (EMR); "rds-cluster-iam-authentication-enabled",
      "rds-instance-iam-authentication-enabled", "rds-instance-public-access-check"
      and "rds-snapshots-public-prohibited" for Amazon Relational Database Service;
      "redshift-cluster-public-access-check" for Amazon Redshift; and "sagemaker-notebook-no-direct-internet-access"
      for SageMaker.

      The following AWS Config managed rules can identify configuration problems that
      should be fixed in order to ensure that cloud storage data are encrypted to
      prevent malicious access: "dax-encryption-enabled", "dynamodb-table-encrypted-kms",
      and "dynamodb-table-encryption-enabled" for Amazon DynamoDB table contents;
      "efs-encrypted-check" for Amazon Elastic File System (EFS) file systems; "elasticsearch-encrypted-at-rest"
      for Elasticsearch Service (ES) domains; "rds-snapshot-encrypted" and "rds-storage-encrypted"
      for Amazon Relational Database Service; "s3-bucket-server-side-encryption-enabled"
      and "s3-default-encryption-kms" for S3 storage; "sns-encrypted-kms" for Amazon
      Simple Notification Service (SNS); "redshift-cluster-configuration-check" and
      "redshift-cluster-kms-enabled" for Redshift clusters; "sagemaker-endpoint-configuration-kms-key-configured"
      and "sagemaker-notebook-instance-kms-key-configured" for SageMaker.

      These rules provide a wide range of coverage for many AWS services, especially
      those most significant to procedures for this technique, resulting in an overall
      score of Significant.'
    score-value: Significant
    secondary-property: ''
    tags: []
    value: AWS Config
  metadata:
    attack-version: 9
    author: ''
    contact: ctid@mitre-engenuity.org
    creation-date: 06/02/2021
    last-update: 06/02/2021
    mapping-type: scoring
    mapping-verision: 1
    organization: ''
    platform: AWS
    platform-version: ''
- attack-object:
    comments: 'Mappings are based on the set of AWS managed rules provided by AWS
      Config, which are predefined rules that AWS Config uses to test for compliance
      with common best practices.

      AWS Config rules can be set to one of two types, "configuration changes" and
      "periodic", which are evaluated upon configuration changes and at a user-defined
      period, respectively.'
    id: T1538
    mapping-pattern: ''
    name: Cloud Service Dashboard
    references:
    - https://docs.aws.amazon.com/config
    - https://docs.aws.amazon.com/config/latest/developerguide
    - https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html
    related-score: false
    score-category: Protect
    score-comment: The "mfa-enabled-for-iam-console-access" managed rule checks whether
      multi-factor authentication is enabled for all AWS IAM users that use a console
      password, protecting against misuse of those accounts' dashboard access. It
      is run periodically, and provides significant coverage, resulting in an overall
      score of Significant.
    score-value: Significant
    secondary-property: ''
    tags: []
    value: AWS Config
  metadata:
    attack-version: 9
    author: ''
    contact: ctid@mitre-engenuity.org
    creation-date: 06/02/2021
    last-update: 06/02/2021
    mapping-type: scoring
    mapping-verision: 1
    organization: ''
    platform: AWS
    platform-version: ''
- attack-object:
    comments: 'Mappings are based on the set of AWS managed rules provided by AWS
      Config, which are predefined rules that AWS Config uses to test for compliance
      with common best practices.

      AWS Config rules can be set to one of two types, "configuration changes" and
      "periodic", which are evaluated upon configuration changes and at a user-defined
      period, respectively.'
    id: T1552
    mapping-pattern: ''
    name: Unsecured Credentials
    references:
    - https://docs.aws.amazon.com/config
    - https://docs.aws.amazon.com/config/latest/developerguide
    - https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html
    related-score: true
    score-category: Protect
    score-comment: 'The following AWS Config managed rules can identify insecure plaintext
      credentials within specific parts of a cloud environment: "codebuild-project-envvar-awscred-check"
      for credentials (AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY) stored within
      environment variables, "codebuild-project-source-repo-url-check" for personal
      access tokens and/or credentials within source repository URLs.

      The following AWS Config managed rules can identify configuration problems that
      should be fixed in order to ensure that the contents of secrets in AWS Secrets
      Manager (including credentials) are properly secured to avoid adversary access:
      "secretsmanager-rotation-enabled-check", "secretsmanager-scheduled-rotation-success-check",
      "secretsmanager-secret-periodic-rotation", and "secretsmanager-using-cmk".

      This control provides partial coverage for a minority of this technique''s sub-techniques,
      in addition to the parent coverage above, resulting in an overall score of Partial.'
    score-value: Partial
    secondary-property: ''
    tags: []
    value: AWS Config
  metadata:
    attack-version: 9
    author: ''
    contact: ctid@mitre-engenuity.org
    creation-date: 06/02/2021
    last-update: 06/02/2021
    mapping-type: scoring
    mapping-verision: 1
    organization: ''
    platform: AWS
    platform-version: ''
- attack-object:
    comments: 'Mappings are based on the set of AWS managed rules provided by AWS
      Config, which are predefined rules that AWS Config uses to test for compliance
      with common best practices.

      AWS Config rules can be set to one of two types, "configuration changes" and
      "periodic", which are evaluated upon configuration changes and at a user-defined
      period, respectively.'
    id: T1557
    mapping-pattern: ''
    name: Man-in-the-Middle
    references:
    - https://docs.aws.amazon.com/config
    - https://docs.aws.amazon.com/config/latest/developerguide
    - https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html
    related-score: false
    score-category: Protect
    score-comment: 'The following AWS Config managed rules can identify configuration
      problems that should be fixed in order to ensure SSL/TLS encryption is enabled
      to protect network traffic: "acm-certificate-expiration-check" for nearly expired
      certificates in AWS Certificate Manager (ACM); "alb-http-to-https-redirection-check"
      for Application Load Balancer (ALB) HTTP listeners; "api-gw-ssl-enabled" for
      API Gateway REST API stages; "cloudfront-custom-ssl-certificate", "cloudfront-sni-enabled",
      and "cloudfront-viewer-policy-https", for Amazon CloudFront distributions; "elb-acm-certificate-required",
      "elb-custom-security-policy-ssl-check", "elb-predefined-security-policy-ssl-check",
      and "elb-tls-https-listeners-only" for Elastic Load Balancing (ELB) Classic
      Load Balancer listeners; "redshift-require-tls-ssl" for Amazon Redshift cluster
      connections to SQL clients; "s3-bucket-ssl-requests-only" for requests for S3
      bucket contents; and "elasticsearch-node-to-node-encryption-check" for Amazon
      ElasticSearch Service node-to-node communications.

      All of these are run on configuration changes except "alb-http-to-https-redirection-check",
      which is run periodically. Coverage factor is partial for these rules, since
      they are specific to a subset of the available AWS services and can only mitigate
      behavior for adversaries who are unable to decrypt the relevant traffic. This
      control does not provide specific coverage for this technique''s sub-techniques,
      resulting in an overall score of Minimal.'
    score-value: Minimal
    secondary-property: ''
    tags: []
    value: AWS Config
  metadata:
    attack-version: 9
    author: ''
    contact: ctid@mitre-engenuity.org
    creation-date: 06/02/2021
    last-update: 06/02/2021
    mapping-type: scoring
    mapping-verision: 1
    organization: ''
    platform: AWS
    platform-version: ''
- attack-object:
    comments: 'Mappings are based on the set of AWS managed rules provided by AWS
      Config, which are predefined rules that AWS Config uses to test for compliance
      with common best practices.

      AWS Config rules can be set to one of two types, "configuration changes" and
      "periodic", which are evaluated upon configuration changes and at a user-defined
      period, respectively.'
    id: T1562
    mapping-pattern: ''
    name: Impair Defenses
    references:
    - https://docs.aws.amazon.com/config
    - https://docs.aws.amazon.com/config/latest/developerguide
    - https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html
    related-score: true
    score-category: Detect
    score-comment: This control provides significant coverage for a minority of this
      technique's sub-techniques, resulting in an overall score of Minimal.
    score-value: Minimal
    secondary-property: ''
    tags: []
    value: AWS Config
  metadata:
    attack-version: 9
    author: ''
    contact: ctid@mitre-engenuity.org
    creation-date: 06/02/2021
    last-update: 06/02/2021
    mapping-type: scoring
    mapping-verision: 1
    organization: ''
    platform: AWS
    platform-version: ''
- attack-object:
    comments: 'Mappings are based on the set of AWS managed rules provided by AWS
      Config, which are predefined rules that AWS Config uses to test for compliance
      with common best practices.

      AWS Config rules can be set to one of two types, "configuration changes" and
      "periodic", which are evaluated upon configuration changes and at a user-defined
      period, respectively.'
    id: T1609
    mapping-pattern: ''
    name: Container Administration Command
    references:
    - https://docs.aws.amazon.com/config
    - https://docs.aws.amazon.com/config/latest/developerguide
    - https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html
    related-score: false
    score-category: Protect
    score-comment: The "eks-endpoint-no-public-access" managed rule can identify whether
      Amazon Elastic Kubernetes Service (Amazon EKS) endpoints are misconfigured to
      allow public endpoint access, which should be fixed in order to prevent malicious
      external access to the Kubernetes API server, including malicious attempts to
      execute commands via the API. It is run periodically and only provides partial
      coverage because it is specific to public access, resulting in an overall score
      of Partial.
    score-value: Partial
    secondary-property: ''
    tags: []
    value: AWS Config
  metadata:
    attack-version: 9
    author: ''
    contact: ctid@mitre-engenuity.org
    creation-date: 06/02/2021
    last-update: 06/02/2021
    mapping-type: scoring
    mapping-verision: 1
    organization: ''
    platform: AWS
    platform-version: ''
- attack-object:
    comments: 'Mappings are based on the set of AWS managed rules provided by AWS
      Config, which are predefined rules that AWS Config uses to test for compliance
      with common best practices.

      AWS Config rules can be set to one of two types, "configuration changes" and
      "periodic", which are evaluated upon configuration changes and at a user-defined
      period, respectively.'
    id: T1610
    mapping-pattern: ''
    name: Deploy Container
    references:
    - https://docs.aws.amazon.com/config
    - https://docs.aws.amazon.com/config/latest/developerguide
    - https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html
    related-score: false
    score-category: Protect
    score-comment: The "eks-endpoint-no-public-access" managed rule can identify whether
      Amazon Elastic Kubernetes Service (Amazon EKS) endpoints are misconfigured to
      allow public endpoint access, which should be fixed in order to prevent malicious
      external access to the Kubernetes API server, including malicious attempts to
      deploy containers. It is run periodically and only provides partial coverage
      because it is specific to public access, resulting in an overall score of Partial.
    score-value: Partial
    secondary-property: ''
    tags: []
    value: AWS Config
  metadata:
    attack-version: 9
    author: ''
    contact: ctid@mitre-engenuity.org
    creation-date: 06/02/2021
    last-update: 06/02/2021
    mapping-type: scoring
    mapping-verision: 1
    organization: ''
    platform: AWS
    platform-version: ''
- attack-object:
    comments: 'Mappings are based on the set of AWS managed rules provided by AWS
      Config, which are predefined rules that AWS Config uses to test for compliance
      with common best practices.

      AWS Config rules can be set to one of two types, "configuration changes" and
      "periodic", which are evaluated upon configuration changes and at a user-defined
      period, respectively.'
    id: T1611
    mapping-pattern: ''
    name: Escape to Host
    references:
    - https://docs.aws.amazon.com/config
    - https://docs.aws.amazon.com/config/latest/developerguide
    - https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html
    related-score: false
    score-category: Protect
    score-comment: The "ecs-task-definition-user-for-host-mode-check" managed rule
      can identify Amazon Elastic Container Service (ECS) task definitions for containers
      with host networking mode and 'privileged' or 'user' container definitions,
      which may enable adversaries to break out of containers and gain access to the
      underlying host. It is run on configuration changes. Coverage is partial, since
      adversaries may find other means to escape a container to the underlying host,
      resulting in an overall score of Partial.
    score-value: Partial
    secondary-property: ''
    tags: []
    value: AWS Config
  metadata:
    attack-version: 9
    author: ''
    contact: ctid@mitre-engenuity.org
    creation-date: 06/02/2021
    last-update: 06/02/2021
    mapping-type: scoring
    mapping-verision: 1
    organization: ''
    platform: AWS
    platform-version: ''
- attack-object:
    comments: 'Mappings are based on the set of AWS managed rules provided by AWS
      Config, which are predefined rules that AWS Config uses to test for compliance
      with common best practices.

      AWS Config rules can be set to one of two types, "configuration changes" and
      "periodic", which are evaluated upon configuration changes and at a user-defined
      period, respectively.'
    id: T1613
    mapping-pattern: ''
    name: Container and Resource Discovery
    references:
    - https://docs.aws.amazon.com/config
    - https://docs.aws.amazon.com/config/latest/developerguide
    - https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html
    related-score: false
    score-category: Protect
    score-comment: The "eks-endpoint-no-public-access" managed rule can identify whether
      Amazon Elastic Kubernetes Service (Amazon EKS) endpoints are misconfigured to
      allow public endpoint access, which should be fixed in order to prevent malicious
      external access to the Kubernetes API server, including malicious attempts to
      discover containers and other resources. It is run periodically and only provides
      partial coverage because it is specific to public access, resulting in an overall
      score of Partial.
    score-value: Partial
    secondary-property: ''
    tags: []
    value: AWS Config
  metadata:
    attack-version: 9
    author: ''
    contact: ctid@mitre-engenuity.org
    creation-date: 06/02/2021
    last-update: 06/02/2021
    mapping-type: scoring
    mapping-verision: 1
    organization: ''
    platform: AWS
    platform-version: ''
