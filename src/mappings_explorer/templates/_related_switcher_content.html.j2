<div id="switcher-component">
  <Switcher :url_prefix="'{{url_prefix}}'"></Switcher>
</div>

<script>
  const Switcher = {
    template: `
    <link href="{{url_prefix}}static/project-switcher.css" rel="stylesheet"></link>
    <div class="project-switcher-expanded d-none">
      <div class="heading-div">
        <a href="https://mitre-engenuity.org/cybersecurity/center-for-threat-informed-defense/" target="_blank">
          <img src="{{url_prefix}}static/img/project-logos/ctid-purple.png" />
        </a>
        <h1>CTID PROJECTS</h1>
      </div>
        <input
          type="search"
          id="ctid-search-input"
          class="ctid-search-input form-control rounded"
          placeholder="Search"
          aria-label="Search"
          v-model="searchModel"
        />
    <div class="project-content">
      <div class="notification-section">
        <a v-for="notification in notificationList" :href="notification.url" target="_blank" class="notification">
          <img src="{{url_prefix}}static/img/project-logos/bell.svg" />
          <h3 :href="notification.url" target="_blank">[[notification.text]]</h3>
          <svg xmlns="http://www.w3.org/2000/svg" width="30" height="24" viewBox="0 0 30 24" class="fade-up-left">
            <g id="arrow_forward" transform="translate(6)">
              <path id="Path_814" data-name="Path 814" d="M0,0H24V24H0Z" fill="none"/>
              <path id="Path_815" data-name="Path 815" d="M12,4,10.59,5.41,16.17,11H-6v2H16.17l-5.58,5.59L12,20l8-8Z"/>
            </g>
          </svg>
        </a>
      </div>
      <template v-if="currentProjectObj.featured_list">
        <div class="featured projects">
            <h2>Most Relevant</h2>
              <div class="project-grid">
                <template v-for="project in projectList" :key="project">
                  <a v-if="currentProjectObj.featured_list.find(id => id === project.id)"
                  class="project-container" :href="project.url" target="_blank">
                    <img :src="url_prefix + 'static/img/project-logos/' + project.imgsrc" alt="" />
                    <h3>[[project.label]]</h3>
                  </a>
                </template>
            </div>
        </div>
      </template>

      <div class="all projects">
          <h2>All Projects</h2>
          <div class="project-grid">
            <template v-for="project in projectList" :key="project">
              <a v-if="!currentProjectObj.featured_list.find(id => id === project.id) && project.id !== currentProjectId"
               class="project-container" :href="project.url" target="_blank">
                <img :src="url_prefix + 'static/img/project-logos/' + project.imgsrc" alt="" />
                <h3>[[project.label]]</h3>
              </a>
            </template>
          </div>
          <p class="error-text" v-if="projectList.length<1">No projects found for "[[searchModel]]"</p>
      </div>
    </div>
</div>
  `,
    delimiters: ["[[", "]]"],
    data() {
      return {
        currentProjectId: "mappings_explorer",
        currentProjectObj:{},
        projectList: {},
        fullProjectList: {},
        notificationList: {},
        searchModel: "",
      };
    },
    props: {
      url_prefix: String,
    },
    computed: {
    },
    methods: {
      getProjectList() {
        project_file = `${this.url_prefix}static/related_projects_src.json`;
        fetch(project_file)
          .then((response) => response.json())
          .then((json) => {
            this.projectList = json.projects;
            this.fullProjectList = json.projects;
            this.notificationList = json.notifications;
            this.currentProjectObj = this.fullProjectList.find(p => p.id === this.currentProjectId)
          });
      }
    },
    watch: {
      searchModel: function (val) {
        const filtered = this.fullProjectList.filter(project => project.label.toLowerCase().includes(this.searchModel.toLowerCase()) )
        this.projectList = filtered
      }
    },
     mounted() {
      this.getProjectList();
    },
  };

  Vue.createApp({
    components: {
      Switcher
    }
  }).mount("#switcher-component");

</script>
<script>
  window.addEventListener('click', ({target}) => {
      if (target.closest('.project-switcher-expanded')) {
          // keep modal open
      } else if (target.closest('.project-switcher')) {
          document.querySelectorAll('.project-switcher-expanded').forEach(el => {
              el.classList.toggle('d-none')
          })
      }
      else {
          document.querySelectorAll('.project-switcher-expanded').forEach(el => {
              el.classList.add('d-none')
          })
      }
  });
</script>



