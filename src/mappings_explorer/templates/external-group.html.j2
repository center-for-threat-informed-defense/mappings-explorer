{% import "./macros.html.j2" as macros %}
{% extends "base.html.j2" %}

{% block content %}
<div id="my_view">
{% include "_banner.html.j2" %}

   <section id="header-container" class="header-container">
    <div class="container" data-aos="fade-up">
      <div class="row justify-content-left">
        <div class="col-lg-12 col-md-12 col-sm-12">
            {{ macros.back_button("Control Families")}}
          <h1 style="text-transform: uppercase;"> NIST 800-53 <span class="highlight">Access Control</span> Mappings</h1>
          {% for paragraph in description %}
            <p>
              {{- paragraph -}}
            </p>
          {% endfor %}
        </div>
      </div>
    </div>
  </section>
  <section id="attack-table" class="mapping-table">
    <div class="container" data-aos="fade-up">
      <div class="row justify-content-left">
        <div class="row">
            <div class="col-lg-4 col-md-12">
            <h2 style="width: max-content">ATT&CK Technique Mappings</h2>
            </div>
            <div class="col-lg-8 col-md-12" style="margin-left: auto;">
            {% include "_badge-section.html.j2" %}
            </div>
        </div>
        <div class="col-12">
          {% block table %}
            {% include "_table.html.j2"%}
          {% endblock table %}
        </div>
      </div>
    </div>
  </section>
  <section id="mapping-table" class="mapping-table">
    <div class="container" data-aos="fade-up">
      <div class="row justify-content-left">
       <div class="row">
            <div class="col-lg-4 col-md-12">
            <h2 style="width: max-content">ATT&CK Technique Mappings</h2>
            </div>
            <div class="col-lg-8 col-md-12" style="margin-left: auto;">
            {% include "_badge-section.html.j2" %}
            </div>
        </div>
        <div class="col-12">
            {% include "_table.html.j2"%}
      </div>
    </div>
  </section>
<script>
  let attackVersion = '';
  let controlVersion = '';
  let domainVersion = '';
  let group = '';
  let uri = window.location.search;

  let params = new URLSearchParams(uri);
  if (params.has("control-version")) {
    controlVersion = params.get("control-version");
  }
  if (params.has("attack-version")) {
    attackVersion = params.get("attack-version");
  }
  if (params.has("domain")) {
    domainVersion = params.get("domain");
  }
  if (params.has("group")) {
    group = params.get("group");
  }
  console.log("the group is: ", group)

  let prev_page = "?control-version="+ controlVersion + "&attack-version=" + attackVersion +  "&domain=" + domainVersion;

  var myModel = {
    control_version: controlVersion,
    attack_version: attackVersion,
    attack_domain: domainVersion,
    group: group,
    prev_page: prev_page
  };
  var myViewModel = new Vue({
    el: '#my_view',
    data: myModel
  });
</script>
</div>
{% endblock content %}


